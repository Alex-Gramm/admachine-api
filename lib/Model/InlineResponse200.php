<?php
/**
 * InlineResponse200
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PLATFORM.IO
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InlineResponse200 Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InlineResponse200 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'float',
        'name' => 'string',
        'email' => 'string',
        'active' => 'float',
        'username' => 'string',
        'agency_user_id' => 'float',
        'balance' => 'float',
        'created_at' => 'float',
        'dsp_number_of_advertisers' => 'float',
        'dsp_number_of_campaigns' => 'float',
        'dsp_spent' => 'float',
        'government_id' => 'float',
        'item_per_page' => 'float',
        'last_login' => 'float',
        'utype' => 'float',
        'max_utype' => 'float',
        'password' => 'float',
        'reach_network_id' => 'float',
        'server_seconds' => 'float',
        'platform' => 'float',
        'subdomain_id' => 'float',
        'where_find' => 'float',
        'server_time' => 'string',
        'support_email' => 'string',
        'privacy_policy_url' => 'string',
        'terms_of_service_url' => 'string',
        'uri_knowledge' => 'string',
        'where_find_other' => 'string',
        'title' => 'string',
        'time' => 'string',
        'api_key' => 'string',
        'logo' => 'string',
        'subdomain' => 'string',
        'site_version' => 'string',
        'external_js' => 'string',
        'internal_js' => 'string',
        'intercom_app_id' => 'string',
        'favicon' => 'string',
        'footer' => 'string',
        'ga_key' => 'string',
        'css' => 'string',
        'css_value' => 'string',
        'csv_separator' => 'string',
        'publisher_feed' => 'bool',
        'show_knowledge' => 'bool',
        'is_admin' => 'bool',
        'is_advertiser' => 'bool',
        'is_change' => 'bool',
        'permission' => 'object',
        'role_balance' => '\OpenAPI\Client\Model\InlineResponse200RoleBalance',
        'paid_count' => 'int',
        'skip_verification_check' => 'bool',
        'min_deposit' => 'float',
        'is_approved' => 'bool',
        'is_focus_group' => 'bool',
        'bonus_checklist_finished' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'name' => null,
        'email' => null,
        'active' => null,
        'username' => null,
        'agency_user_id' => null,
        'balance' => null,
        'created_at' => null,
        'dsp_number_of_advertisers' => null,
        'dsp_number_of_campaigns' => null,
        'dsp_spent' => null,
        'government_id' => null,
        'item_per_page' => null,
        'last_login' => null,
        'utype' => null,
        'max_utype' => null,
        'password' => null,
        'reach_network_id' => null,
        'server_seconds' => null,
        'platform' => null,
        'subdomain_id' => null,
        'where_find' => null,
        'server_time' => null,
        'support_email' => null,
        'privacy_policy_url' => null,
        'terms_of_service_url' => null,
        'uri_knowledge' => null,
        'where_find_other' => null,
        'title' => null,
        'time' => null,
        'api_key' => null,
        'logo' => null,
        'subdomain' => null,
        'site_version' => null,
        'external_js' => null,
        'internal_js' => null,
        'intercom_app_id' => null,
        'favicon' => null,
        'footer' => null,
        'ga_key' => null,
        'css' => null,
        'css_value' => null,
        'csv_separator' => null,
        'publisher_feed' => null,
        'show_knowledge' => null,
        'is_admin' => null,
        'is_advertiser' => null,
        'is_change' => null,
        'permission' => null,
        'role_balance' => null,
        'paid_count' => null,
        'skip_verification_check' => null,
        'min_deposit' => null,
        'is_approved' => null,
        'is_focus_group' => null,
        'bonus_checklist_finished' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'email' => 'email',
        'active' => 'active',
        'username' => 'username',
        'agency_user_id' => 'agency_user_id',
        'balance' => 'balance',
        'created_at' => 'created_at',
        'dsp_number_of_advertisers' => 'dsp_number_of_advertisers',
        'dsp_number_of_campaigns' => 'dsp_number_of_campaigns',
        'dsp_spent' => 'dsp_spent',
        'government_id' => 'government_id',
        'item_per_page' => 'item_per_page',
        'last_login' => 'last_login',
        'utype' => 'utype',
        'max_utype' => 'max_utype',
        'password' => 'password',
        'reach_network_id' => 'reach_network_id',
        'server_seconds' => 'server_seconds',
        'platform' => 'platform',
        'subdomain_id' => 'subdomain_id',
        'where_find' => 'where_find',
        'server_time' => 'server_time',
        'support_email' => 'support_email',
        'privacy_policy_url' => 'privacy_policy_url',
        'terms_of_service_url' => 'terms_of_service_url',
        'uri_knowledge' => 'uri_knowledge',
        'where_find_other' => 'where_find_other',
        'title' => 'title',
        'time' => 'time',
        'api_key' => 'api_key',
        'logo' => 'logo',
        'subdomain' => 'subdomain',
        'site_version' => 'site_version',
        'external_js' => 'external_js',
        'internal_js' => 'internal_js',
        'intercom_app_id' => 'intercom_app_id',
        'favicon' => 'favicon',
        'footer' => 'footer',
        'ga_key' => 'ga_key',
        'css' => 'css',
        'css_value' => 'css_value',
        'csv_separator' => 'csv_separator',
        'publisher_feed' => 'publisher_feed',
        'show_knowledge' => 'show_knowledge',
        'is_admin' => 'is_admin',
        'is_advertiser' => 'is_advertiser',
        'is_change' => 'is_change',
        'permission' => 'permission',
        'role_balance' => 'role_balance',
        'paid_count' => 'paid_count',
        'skip_verification_check' => 'skip_verification_check',
        'min_deposit' => 'min_deposit',
        'is_approved' => 'is_approved',
        'is_focus_group' => 'is_focus_group',
        'bonus_checklist_finished' => 'bonus_checklist_finished'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'email' => 'setEmail',
        'active' => 'setActive',
        'username' => 'setUsername',
        'agency_user_id' => 'setAgencyUserId',
        'balance' => 'setBalance',
        'created_at' => 'setCreatedAt',
        'dsp_number_of_advertisers' => 'setDspNumberOfAdvertisers',
        'dsp_number_of_campaigns' => 'setDspNumberOfCampaigns',
        'dsp_spent' => 'setDspSpent',
        'government_id' => 'setGovernmentId',
        'item_per_page' => 'setItemPerPage',
        'last_login' => 'setLastLogin',
        'utype' => 'setUtype',
        'max_utype' => 'setMaxUtype',
        'password' => 'setPassword',
        'reach_network_id' => 'setReachNetworkId',
        'server_seconds' => 'setServerSeconds',
        'platform' => 'setPlatform',
        'subdomain_id' => 'setSubdomainId',
        'where_find' => 'setWhereFind',
        'server_time' => 'setServerTime',
        'support_email' => 'setSupportEmail',
        'privacy_policy_url' => 'setPrivacyPolicyUrl',
        'terms_of_service_url' => 'setTermsOfServiceUrl',
        'uri_knowledge' => 'setUriKnowledge',
        'where_find_other' => 'setWhereFindOther',
        'title' => 'setTitle',
        'time' => 'setTime',
        'api_key' => 'setApiKey',
        'logo' => 'setLogo',
        'subdomain' => 'setSubdomain',
        'site_version' => 'setSiteVersion',
        'external_js' => 'setExternalJs',
        'internal_js' => 'setInternalJs',
        'intercom_app_id' => 'setIntercomAppId',
        'favicon' => 'setFavicon',
        'footer' => 'setFooter',
        'ga_key' => 'setGaKey',
        'css' => 'setCss',
        'css_value' => 'setCssValue',
        'csv_separator' => 'setCsvSeparator',
        'publisher_feed' => 'setPublisherFeed',
        'show_knowledge' => 'setShowKnowledge',
        'is_admin' => 'setIsAdmin',
        'is_advertiser' => 'setIsAdvertiser',
        'is_change' => 'setIsChange',
        'permission' => 'setPermission',
        'role_balance' => 'setRoleBalance',
        'paid_count' => 'setPaidCount',
        'skip_verification_check' => 'setSkipVerificationCheck',
        'min_deposit' => 'setMinDeposit',
        'is_approved' => 'setIsApproved',
        'is_focus_group' => 'setIsFocusGroup',
        'bonus_checklist_finished' => 'setBonusChecklistFinished'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'email' => 'getEmail',
        'active' => 'getActive',
        'username' => 'getUsername',
        'agency_user_id' => 'getAgencyUserId',
        'balance' => 'getBalance',
        'created_at' => 'getCreatedAt',
        'dsp_number_of_advertisers' => 'getDspNumberOfAdvertisers',
        'dsp_number_of_campaigns' => 'getDspNumberOfCampaigns',
        'dsp_spent' => 'getDspSpent',
        'government_id' => 'getGovernmentId',
        'item_per_page' => 'getItemPerPage',
        'last_login' => 'getLastLogin',
        'utype' => 'getUtype',
        'max_utype' => 'getMaxUtype',
        'password' => 'getPassword',
        'reach_network_id' => 'getReachNetworkId',
        'server_seconds' => 'getServerSeconds',
        'platform' => 'getPlatform',
        'subdomain_id' => 'getSubdomainId',
        'where_find' => 'getWhereFind',
        'server_time' => 'getServerTime',
        'support_email' => 'getSupportEmail',
        'privacy_policy_url' => 'getPrivacyPolicyUrl',
        'terms_of_service_url' => 'getTermsOfServiceUrl',
        'uri_knowledge' => 'getUriKnowledge',
        'where_find_other' => 'getWhereFindOther',
        'title' => 'getTitle',
        'time' => 'getTime',
        'api_key' => 'getApiKey',
        'logo' => 'getLogo',
        'subdomain' => 'getSubdomain',
        'site_version' => 'getSiteVersion',
        'external_js' => 'getExternalJs',
        'internal_js' => 'getInternalJs',
        'intercom_app_id' => 'getIntercomAppId',
        'favicon' => 'getFavicon',
        'footer' => 'getFooter',
        'ga_key' => 'getGaKey',
        'css' => 'getCss',
        'css_value' => 'getCssValue',
        'csv_separator' => 'getCsvSeparator',
        'publisher_feed' => 'getPublisherFeed',
        'show_knowledge' => 'getShowKnowledge',
        'is_admin' => 'getIsAdmin',
        'is_advertiser' => 'getIsAdvertiser',
        'is_change' => 'getIsChange',
        'permission' => 'getPermission',
        'role_balance' => 'getRoleBalance',
        'paid_count' => 'getPaidCount',
        'skip_verification_check' => 'getSkipVerificationCheck',
        'min_deposit' => 'getMinDeposit',
        'is_approved' => 'getIsApproved',
        'is_focus_group' => 'getIsFocusGroup',
        'bonus_checklist_finished' => 'getBonusChecklistFinished'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['active'] = isset($data['active']) ? $data['active'] : null;
        $this->container['username'] = isset($data['username']) ? $data['username'] : null;
        $this->container['agency_user_id'] = isset($data['agency_user_id']) ? $data['agency_user_id'] : null;
        $this->container['balance'] = isset($data['balance']) ? $data['balance'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['dsp_number_of_advertisers'] = isset($data['dsp_number_of_advertisers']) ? $data['dsp_number_of_advertisers'] : null;
        $this->container['dsp_number_of_campaigns'] = isset($data['dsp_number_of_campaigns']) ? $data['dsp_number_of_campaigns'] : null;
        $this->container['dsp_spent'] = isset($data['dsp_spent']) ? $data['dsp_spent'] : null;
        $this->container['government_id'] = isset($data['government_id']) ? $data['government_id'] : null;
        $this->container['item_per_page'] = isset($data['item_per_page']) ? $data['item_per_page'] : null;
        $this->container['last_login'] = isset($data['last_login']) ? $data['last_login'] : null;
        $this->container['utype'] = isset($data['utype']) ? $data['utype'] : null;
        $this->container['max_utype'] = isset($data['max_utype']) ? $data['max_utype'] : null;
        $this->container['password'] = isset($data['password']) ? $data['password'] : null;
        $this->container['reach_network_id'] = isset($data['reach_network_id']) ? $data['reach_network_id'] : null;
        $this->container['server_seconds'] = isset($data['server_seconds']) ? $data['server_seconds'] : null;
        $this->container['platform'] = isset($data['platform']) ? $data['platform'] : null;
        $this->container['subdomain_id'] = isset($data['subdomain_id']) ? $data['subdomain_id'] : null;
        $this->container['where_find'] = isset($data['where_find']) ? $data['where_find'] : null;
        $this->container['server_time'] = isset($data['server_time']) ? $data['server_time'] : null;
        $this->container['support_email'] = isset($data['support_email']) ? $data['support_email'] : null;
        $this->container['privacy_policy_url'] = isset($data['privacy_policy_url']) ? $data['privacy_policy_url'] : null;
        $this->container['terms_of_service_url'] = isset($data['terms_of_service_url']) ? $data['terms_of_service_url'] : null;
        $this->container['uri_knowledge'] = isset($data['uri_knowledge']) ? $data['uri_knowledge'] : null;
        $this->container['where_find_other'] = isset($data['where_find_other']) ? $data['where_find_other'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['time'] = isset($data['time']) ? $data['time'] : null;
        $this->container['api_key'] = isset($data['api_key']) ? $data['api_key'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['subdomain'] = isset($data['subdomain']) ? $data['subdomain'] : null;
        $this->container['site_version'] = isset($data['site_version']) ? $data['site_version'] : null;
        $this->container['external_js'] = isset($data['external_js']) ? $data['external_js'] : null;
        $this->container['internal_js'] = isset($data['internal_js']) ? $data['internal_js'] : null;
        $this->container['intercom_app_id'] = isset($data['intercom_app_id']) ? $data['intercom_app_id'] : null;
        $this->container['favicon'] = isset($data['favicon']) ? $data['favicon'] : null;
        $this->container['footer'] = isset($data['footer']) ? $data['footer'] : null;
        $this->container['ga_key'] = isset($data['ga_key']) ? $data['ga_key'] : null;
        $this->container['css'] = isset($data['css']) ? $data['css'] : null;
        $this->container['css_value'] = isset($data['css_value']) ? $data['css_value'] : null;
        $this->container['csv_separator'] = isset($data['csv_separator']) ? $data['csv_separator'] : null;
        $this->container['publisher_feed'] = isset($data['publisher_feed']) ? $data['publisher_feed'] : null;
        $this->container['show_knowledge'] = isset($data['show_knowledge']) ? $data['show_knowledge'] : null;
        $this->container['is_admin'] = isset($data['is_admin']) ? $data['is_admin'] : null;
        $this->container['is_advertiser'] = isset($data['is_advertiser']) ? $data['is_advertiser'] : null;
        $this->container['is_change'] = isset($data['is_change']) ? $data['is_change'] : null;
        $this->container['permission'] = isset($data['permission']) ? $data['permission'] : null;
        $this->container['role_balance'] = isset($data['role_balance']) ? $data['role_balance'] : null;
        $this->container['paid_count'] = isset($data['paid_count']) ? $data['paid_count'] : null;
        $this->container['skip_verification_check'] = isset($data['skip_verification_check']) ? $data['skip_verification_check'] : null;
        $this->container['min_deposit'] = isset($data['min_deposit']) ? $data['min_deposit'] : null;
        $this->container['is_approved'] = isset($data['is_approved']) ? $data['is_approved'] : null;
        $this->container['is_focus_group'] = isset($data['is_focus_group']) ? $data['is_focus_group'] : null;
        $this->container['bonus_checklist_finished'] = isset($data['bonus_checklist_finished']) ? $data['bonus_checklist_finished'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return float|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param float|null $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email Email.
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets active
     *
     * @return float|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param float|null $active Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets username
     *
     * @return string|null
     */
    public function getUsername()
    {
        return $this->container['username'];
    }

    /**
     * Sets username
     *
     * @param string|null $username Username.
     *
     * @return $this
     */
    public function setUsername($username)
    {
        $this->container['username'] = $username;

        return $this;
    }

    /**
     * Gets agency_user_id
     *
     * @return float|null
     */
    public function getAgencyUserId()
    {
        return $this->container['agency_user_id'];
    }

    /**
     * Sets agency_user_id
     *
     * @param float|null $agency_user_id agency_user_id
     *
     * @return $this
     */
    public function setAgencyUserId($agency_user_id)
    {
        $this->container['agency_user_id'] = $agency_user_id;

        return $this;
    }

    /**
     * Gets balance
     *
     * @return float|null
     */
    public function getBalance()
    {
        return $this->container['balance'];
    }

    /**
     * Sets balance
     *
     * @param float|null $balance balance
     *
     * @return $this
     */
    public function setBalance($balance)
    {
        $this->container['balance'] = $balance;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return float|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param float|null $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets dsp_number_of_advertisers
     *
     * @return float|null
     */
    public function getDspNumberOfAdvertisers()
    {
        return $this->container['dsp_number_of_advertisers'];
    }

    /**
     * Sets dsp_number_of_advertisers
     *
     * @param float|null $dsp_number_of_advertisers dsp_number_of_advertisers
     *
     * @return $this
     */
    public function setDspNumberOfAdvertisers($dsp_number_of_advertisers)
    {
        $this->container['dsp_number_of_advertisers'] = $dsp_number_of_advertisers;

        return $this;
    }

    /**
     * Gets dsp_number_of_campaigns
     *
     * @return float|null
     */
    public function getDspNumberOfCampaigns()
    {
        return $this->container['dsp_number_of_campaigns'];
    }

    /**
     * Sets dsp_number_of_campaigns
     *
     * @param float|null $dsp_number_of_campaigns dsp_number_of_campaigns
     *
     * @return $this
     */
    public function setDspNumberOfCampaigns($dsp_number_of_campaigns)
    {
        $this->container['dsp_number_of_campaigns'] = $dsp_number_of_campaigns;

        return $this;
    }

    /**
     * Gets dsp_spent
     *
     * @return float|null
     */
    public function getDspSpent()
    {
        return $this->container['dsp_spent'];
    }

    /**
     * Sets dsp_spent
     *
     * @param float|null $dsp_spent dsp_spent
     *
     * @return $this
     */
    public function setDspSpent($dsp_spent)
    {
        $this->container['dsp_spent'] = $dsp_spent;

        return $this;
    }

    /**
     * Gets government_id
     *
     * @return float|null
     */
    public function getGovernmentId()
    {
        return $this->container['government_id'];
    }

    /**
     * Sets government_id
     *
     * @param float|null $government_id government_id
     *
     * @return $this
     */
    public function setGovernmentId($government_id)
    {
        $this->container['government_id'] = $government_id;

        return $this;
    }

    /**
     * Gets item_per_page
     *
     * @return float|null
     */
    public function getItemPerPage()
    {
        return $this->container['item_per_page'];
    }

    /**
     * Sets item_per_page
     *
     * @param float|null $item_per_page item_per_page
     *
     * @return $this
     */
    public function setItemPerPage($item_per_page)
    {
        $this->container['item_per_page'] = $item_per_page;

        return $this;
    }

    /**
     * Gets last_login
     *
     * @return float|null
     */
    public function getLastLogin()
    {
        return $this->container['last_login'];
    }

    /**
     * Sets last_login
     *
     * @param float|null $last_login last_login
     *
     * @return $this
     */
    public function setLastLogin($last_login)
    {
        $this->container['last_login'] = $last_login;

        return $this;
    }

    /**
     * Gets utype
     *
     * @return float|null
     */
    public function getUtype()
    {
        return $this->container['utype'];
    }

    /**
     * Sets utype
     *
     * @param float|null $utype utype
     *
     * @return $this
     */
    public function setUtype($utype)
    {
        $this->container['utype'] = $utype;

        return $this;
    }

    /**
     * Gets max_utype
     *
     * @return float|null
     */
    public function getMaxUtype()
    {
        return $this->container['max_utype'];
    }

    /**
     * Sets max_utype
     *
     * @param float|null $max_utype max_utype
     *
     * @return $this
     */
    public function setMaxUtype($max_utype)
    {
        $this->container['max_utype'] = $max_utype;

        return $this;
    }

    /**
     * Gets password
     *
     * @return float|null
     */
    public function getPassword()
    {
        return $this->container['password'];
    }

    /**
     * Sets password
     *
     * @param float|null $password password
     *
     * @return $this
     */
    public function setPassword($password)
    {
        $this->container['password'] = $password;

        return $this;
    }

    /**
     * Gets reach_network_id
     *
     * @return float|null
     */
    public function getReachNetworkId()
    {
        return $this->container['reach_network_id'];
    }

    /**
     * Sets reach_network_id
     *
     * @param float|null $reach_network_id reach_network_id
     *
     * @return $this
     */
    public function setReachNetworkId($reach_network_id)
    {
        $this->container['reach_network_id'] = $reach_network_id;

        return $this;
    }

    /**
     * Gets server_seconds
     *
     * @return float|null
     */
    public function getServerSeconds()
    {
        return $this->container['server_seconds'];
    }

    /**
     * Sets server_seconds
     *
     * @param float|null $server_seconds server_seconds
     *
     * @return $this
     */
    public function setServerSeconds($server_seconds)
    {
        $this->container['server_seconds'] = $server_seconds;

        return $this;
    }

    /**
     * Gets platform
     *
     * @return float|null
     */
    public function getPlatform()
    {
        return $this->container['platform'];
    }

    /**
     * Sets platform
     *
     * @param float|null $platform platform
     *
     * @return $this
     */
    public function setPlatform($platform)
    {
        $this->container['platform'] = $platform;

        return $this;
    }

    /**
     * Gets subdomain_id
     *
     * @return float|null
     */
    public function getSubdomainId()
    {
        return $this->container['subdomain_id'];
    }

    /**
     * Sets subdomain_id
     *
     * @param float|null $subdomain_id subdomain_id
     *
     * @return $this
     */
    public function setSubdomainId($subdomain_id)
    {
        $this->container['subdomain_id'] = $subdomain_id;

        return $this;
    }

    /**
     * Gets where_find
     *
     * @return float|null
     */
    public function getWhereFind()
    {
        return $this->container['where_find'];
    }

    /**
     * Sets where_find
     *
     * @param float|null $where_find where_find
     *
     * @return $this
     */
    public function setWhereFind($where_find)
    {
        $this->container['where_find'] = $where_find;

        return $this;
    }

    /**
     * Gets server_time
     *
     * @return string|null
     */
    public function getServerTime()
    {
        return $this->container['server_time'];
    }

    /**
     * Sets server_time
     *
     * @param string|null $server_time server_time
     *
     * @return $this
     */
    public function setServerTime($server_time)
    {
        $this->container['server_time'] = $server_time;

        return $this;
    }

    /**
     * Gets support_email
     *
     * @return string|null
     */
    public function getSupportEmail()
    {
        return $this->container['support_email'];
    }

    /**
     * Sets support_email
     *
     * @param string|null $support_email support_email
     *
     * @return $this
     */
    public function setSupportEmail($support_email)
    {
        $this->container['support_email'] = $support_email;

        return $this;
    }

    /**
     * Gets privacy_policy_url
     *
     * @return string|null
     */
    public function getPrivacyPolicyUrl()
    {
        return $this->container['privacy_policy_url'];
    }

    /**
     * Sets privacy_policy_url
     *
     * @param string|null $privacy_policy_url privacy_policy_url
     *
     * @return $this
     */
    public function setPrivacyPolicyUrl($privacy_policy_url)
    {
        $this->container['privacy_policy_url'] = $privacy_policy_url;

        return $this;
    }

    /**
     * Gets terms_of_service_url
     *
     * @return string|null
     */
    public function getTermsOfServiceUrl()
    {
        return $this->container['terms_of_service_url'];
    }

    /**
     * Sets terms_of_service_url
     *
     * @param string|null $terms_of_service_url terms_of_service_url
     *
     * @return $this
     */
    public function setTermsOfServiceUrl($terms_of_service_url)
    {
        $this->container['terms_of_service_url'] = $terms_of_service_url;

        return $this;
    }

    /**
     * Gets uri_knowledge
     *
     * @return string|null
     */
    public function getUriKnowledge()
    {
        return $this->container['uri_knowledge'];
    }

    /**
     * Sets uri_knowledge
     *
     * @param string|null $uri_knowledge uri_knowledge
     *
     * @return $this
     */
    public function setUriKnowledge($uri_knowledge)
    {
        $this->container['uri_knowledge'] = $uri_knowledge;

        return $this;
    }

    /**
     * Gets where_find_other
     *
     * @return string|null
     */
    public function getWhereFindOther()
    {
        return $this->container['where_find_other'];
    }

    /**
     * Sets where_find_other
     *
     * @param string|null $where_find_other where_find_other
     *
     * @return $this
     */
    public function setWhereFindOther($where_find_other)
    {
        $this->container['where_find_other'] = $where_find_other;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets time
     *
     * @return string|null
     */
    public function getTime()
    {
        return $this->container['time'];
    }

    /**
     * Sets time
     *
     * @param string|null $time time
     *
     * @return $this
     */
    public function setTime($time)
    {
        $this->container['time'] = $time;

        return $this;
    }

    /**
     * Gets api_key
     *
     * @return string|null
     */
    public function getApiKey()
    {
        return $this->container['api_key'];
    }

    /**
     * Sets api_key
     *
     * @param string|null $api_key api_key
     *
     * @return $this
     */
    public function setApiKey($api_key)
    {
        $this->container['api_key'] = $api_key;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return string|null
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param string|null $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets subdomain
     *
     * @return string|null
     */
    public function getSubdomain()
    {
        return $this->container['subdomain'];
    }

    /**
     * Sets subdomain
     *
     * @param string|null $subdomain subdomain
     *
     * @return $this
     */
    public function setSubdomain($subdomain)
    {
        $this->container['subdomain'] = $subdomain;

        return $this;
    }

    /**
     * Gets site_version
     *
     * @return string|null
     */
    public function getSiteVersion()
    {
        return $this->container['site_version'];
    }

    /**
     * Sets site_version
     *
     * @param string|null $site_version site_version
     *
     * @return $this
     */
    public function setSiteVersion($site_version)
    {
        $this->container['site_version'] = $site_version;

        return $this;
    }

    /**
     * Gets external_js
     *
     * @return string|null
     */
    public function getExternalJs()
    {
        return $this->container['external_js'];
    }

    /**
     * Sets external_js
     *
     * @param string|null $external_js external_js
     *
     * @return $this
     */
    public function setExternalJs($external_js)
    {
        $this->container['external_js'] = $external_js;

        return $this;
    }

    /**
     * Gets internal_js
     *
     * @return string|null
     */
    public function getInternalJs()
    {
        return $this->container['internal_js'];
    }

    /**
     * Sets internal_js
     *
     * @param string|null $internal_js internal_js
     *
     * @return $this
     */
    public function setInternalJs($internal_js)
    {
        $this->container['internal_js'] = $internal_js;

        return $this;
    }

    /**
     * Gets intercom_app_id
     *
     * @return string|null
     */
    public function getIntercomAppId()
    {
        return $this->container['intercom_app_id'];
    }

    /**
     * Sets intercom_app_id
     *
     * @param string|null $intercom_app_id intercom_app_id
     *
     * @return $this
     */
    public function setIntercomAppId($intercom_app_id)
    {
        $this->container['intercom_app_id'] = $intercom_app_id;

        return $this;
    }

    /**
     * Gets favicon
     *
     * @return string|null
     */
    public function getFavicon()
    {
        return $this->container['favicon'];
    }

    /**
     * Sets favicon
     *
     * @param string|null $favicon favicon
     *
     * @return $this
     */
    public function setFavicon($favicon)
    {
        $this->container['favicon'] = $favicon;

        return $this;
    }

    /**
     * Gets footer
     *
     * @return string|null
     */
    public function getFooter()
    {
        return $this->container['footer'];
    }

    /**
     * Sets footer
     *
     * @param string|null $footer footer
     *
     * @return $this
     */
    public function setFooter($footer)
    {
        $this->container['footer'] = $footer;

        return $this;
    }

    /**
     * Gets ga_key
     *
     * @return string|null
     */
    public function getGaKey()
    {
        return $this->container['ga_key'];
    }

    /**
     * Sets ga_key
     *
     * @param string|null $ga_key ga_key
     *
     * @return $this
     */
    public function setGaKey($ga_key)
    {
        $this->container['ga_key'] = $ga_key;

        return $this;
    }

    /**
     * Gets css
     *
     * @return string|null
     */
    public function getCss()
    {
        return $this->container['css'];
    }

    /**
     * Sets css
     *
     * @param string|null $css css
     *
     * @return $this
     */
    public function setCss($css)
    {
        $this->container['css'] = $css;

        return $this;
    }

    /**
     * Gets css_value
     *
     * @return string|null
     */
    public function getCssValue()
    {
        return $this->container['css_value'];
    }

    /**
     * Sets css_value
     *
     * @param string|null $css_value css_value
     *
     * @return $this
     */
    public function setCssValue($css_value)
    {
        $this->container['css_value'] = $css_value;

        return $this;
    }

    /**
     * Gets csv_separator
     *
     * @return string|null
     */
    public function getCsvSeparator()
    {
        return $this->container['csv_separator'];
    }

    /**
     * Sets csv_separator
     *
     * @param string|null $csv_separator csv_separator
     *
     * @return $this
     */
    public function setCsvSeparator($csv_separator)
    {
        $this->container['csv_separator'] = $csv_separator;

        return $this;
    }

    /**
     * Gets publisher_feed
     *
     * @return bool|null
     */
    public function getPublisherFeed()
    {
        return $this->container['publisher_feed'];
    }

    /**
     * Sets publisher_feed
     *
     * @param bool|null $publisher_feed publisher_feed
     *
     * @return $this
     */
    public function setPublisherFeed($publisher_feed)
    {
        $this->container['publisher_feed'] = $publisher_feed;

        return $this;
    }

    /**
     * Gets show_knowledge
     *
     * @return bool|null
     */
    public function getShowKnowledge()
    {
        return $this->container['show_knowledge'];
    }

    /**
     * Sets show_knowledge
     *
     * @param bool|null $show_knowledge show_knowledge
     *
     * @return $this
     */
    public function setShowKnowledge($show_knowledge)
    {
        $this->container['show_knowledge'] = $show_knowledge;

        return $this;
    }

    /**
     * Gets is_admin
     *
     * @return bool|null
     */
    public function getIsAdmin()
    {
        return $this->container['is_admin'];
    }

    /**
     * Sets is_admin
     *
     * @param bool|null $is_admin is_admin
     *
     * @return $this
     */
    public function setIsAdmin($is_admin)
    {
        $this->container['is_admin'] = $is_admin;

        return $this;
    }

    /**
     * Gets is_advertiser
     *
     * @return bool|null
     */
    public function getIsAdvertiser()
    {
        return $this->container['is_advertiser'];
    }

    /**
     * Sets is_advertiser
     *
     * @param bool|null $is_advertiser is_advertiser
     *
     * @return $this
     */
    public function setIsAdvertiser($is_advertiser)
    {
        $this->container['is_advertiser'] = $is_advertiser;

        return $this;
    }

    /**
     * Gets is_change
     *
     * @return bool|null
     */
    public function getIsChange()
    {
        return $this->container['is_change'];
    }

    /**
     * Sets is_change
     *
     * @param bool|null $is_change is_change
     *
     * @return $this
     */
    public function setIsChange($is_change)
    {
        $this->container['is_change'] = $is_change;

        return $this;
    }

    /**
     * Gets permission
     *
     * @return object|null
     */
    public function getPermission()
    {
        return $this->container['permission'];
    }

    /**
     * Sets permission
     *
     * @param object|null $permission permission
     *
     * @return $this
     */
    public function setPermission($permission)
    {
        $this->container['permission'] = $permission;

        return $this;
    }

    /**
     * Gets role_balance
     *
     * @return \OpenAPI\Client\Model\InlineResponse200RoleBalance|null
     */
    public function getRoleBalance()
    {
        return $this->container['role_balance'];
    }

    /**
     * Sets role_balance
     *
     * @param \OpenAPI\Client\Model\InlineResponse200RoleBalance|null $role_balance role_balance
     *
     * @return $this
     */
    public function setRoleBalance($role_balance)
    {
        $this->container['role_balance'] = $role_balance;

        return $this;
    }

    /**
     * Gets paid_count
     *
     * @return int|null
     */
    public function getPaidCount()
    {
        return $this->container['paid_count'];
    }

    /**
     * Sets paid_count
     *
     * @param int|null $paid_count Number of payments for ADVERTISER or ADMIN
     *
     * @return $this
     */
    public function setPaidCount($paid_count)
    {
        $this->container['paid_count'] = $paid_count;

        return $this;
    }

    /**
     * Gets skip_verification_check
     *
     * @return bool|null
     */
    public function getSkipVerificationCheck()
    {
        return $this->container['skip_verification_check'];
    }

    /**
     * Sets skip_verification_check
     *
     * @param bool|null $skip_verification_check skip_verification_check
     *
     * @return $this
     */
    public function setSkipVerificationCheck($skip_verification_check)
    {
        $this->container['skip_verification_check'] = $skip_verification_check;

        return $this;
    }

    /**
     * Gets min_deposit
     *
     * @return float|null
     */
    public function getMinDeposit()
    {
        return $this->container['min_deposit'];
    }

    /**
     * Sets min_deposit
     *
     * @param float|null $min_deposit min_deposit
     *
     * @return $this
     */
    public function setMinDeposit($min_deposit)
    {
        $this->container['min_deposit'] = $min_deposit;

        return $this;
    }

    /**
     * Gets is_approved
     *
     * @return bool|null
     */
    public function getIsApproved()
    {
        return $this->container['is_approved'];
    }

    /**
     * Sets is_approved
     *
     * @param bool|null $is_approved Only for advertiser and publisher
     *
     * @return $this
     */
    public function setIsApproved($is_approved)
    {
        $this->container['is_approved'] = $is_approved;

        return $this;
    }

    /**
     * Gets is_focus_group
     *
     * @return bool|null
     */
    public function getIsFocusGroup()
    {
        return $this->container['is_focus_group'];
    }

    /**
     * Sets is_focus_group
     *
     * @param bool|null $is_focus_group Only for advertiser
     *
     * @return $this
     */
    public function setIsFocusGroup($is_focus_group)
    {
        $this->container['is_focus_group'] = $is_focus_group;

        return $this;
    }

    /**
     * Gets bonus_checklist_finished
     *
     * @return bool|null
     */
    public function getBonusChecklistFinished()
    {
        return $this->container['bonus_checklist_finished'];
    }

    /**
     * Sets bonus_checklist_finished
     *
     * @param bool|null $bonus_checklist_finished bonus_checklist_finished
     *
     * @return $this
     */
    public function setBonusChecklistFinished($bonus_checklist_finished)
    {
        $this->container['bonus_checklist_finished'] = $bonus_checklist_finished;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


