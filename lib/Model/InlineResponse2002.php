<?php
/**
 * InlineResponse2002
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PLATFORM.IO
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InlineResponse2002 Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InlineResponse2002 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_2';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'checklist_ad_status' => 'string',
        'checklist_dsp_status' => 'string',
        'checklist_ad_set_status' => 'string',
        'checklist_ad_set_budget_status' => 'string',
        'checklist_ad_assigned_status' => 'string',
        'checklist_dsp_assigned_status' => 'string',
        'checklist_ad_set_datetime_status' => 'string',
        'checklist_ad_set_campaign_status' => 'string',
        'checklist_ad_set_campaign_datetime_status' => 'string',
        'checklist_ad_set_advertiser_balance_status' => 'string',
        'checklist_ad_set_organization_balance_status' => 'string',
        'checklist_ad_set_organization_status' => 'string',
        'checklist_ad_set_agency_balance_status' => 'string',
        'checklist_ad_set_agency_status' => 'string',
        'checklist_ad_set_advertiser_status' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'checklist_ad_status' => null,
        'checklist_dsp_status' => null,
        'checklist_ad_set_status' => null,
        'checklist_ad_set_budget_status' => null,
        'checklist_ad_assigned_status' => null,
        'checklist_dsp_assigned_status' => null,
        'checklist_ad_set_datetime_status' => null,
        'checklist_ad_set_campaign_status' => null,
        'checklist_ad_set_campaign_datetime_status' => null,
        'checklist_ad_set_advertiser_balance_status' => null,
        'checklist_ad_set_organization_balance_status' => null,
        'checklist_ad_set_organization_status' => null,
        'checklist_ad_set_agency_balance_status' => null,
        'checklist_ad_set_agency_status' => null,
        'checklist_ad_set_advertiser_status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'checklist_ad_status' => 'checklist_ad_status',
        'checklist_dsp_status' => 'checklist_dsp_status',
        'checklist_ad_set_status' => 'checklist_ad_set_status',
        'checklist_ad_set_budget_status' => 'checklist_ad_set_budget_status',
        'checklist_ad_assigned_status' => 'checklist_ad_assigned_status',
        'checklist_dsp_assigned_status' => 'checklist_dsp_assigned_status',
        'checklist_ad_set_datetime_status' => 'checklist_ad_set_datetime_status',
        'checklist_ad_set_campaign_status' => 'checklist_ad_set_campaign_status',
        'checklist_ad_set_campaign_datetime_status' => 'checklist_ad_set_campaign_datetime_status',
        'checklist_ad_set_advertiser_balance_status' => 'checklist_ad_set_advertiser_balance_status',
        'checklist_ad_set_organization_balance_status' => 'checklist_ad_set_organization_balance_status',
        'checklist_ad_set_organization_status' => 'checklist_ad_set_organization_status',
        'checklist_ad_set_agency_balance_status' => 'checklist_ad_set_agency_balance_status',
        'checklist_ad_set_agency_status' => 'checklist_ad_set_agency_status',
        'checklist_ad_set_advertiser_status' => 'checklist_ad_set_advertiser_status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'checklist_ad_status' => 'setChecklistAdStatus',
        'checklist_dsp_status' => 'setChecklistDspStatus',
        'checklist_ad_set_status' => 'setChecklistAdSetStatus',
        'checklist_ad_set_budget_status' => 'setChecklistAdSetBudgetStatus',
        'checklist_ad_assigned_status' => 'setChecklistAdAssignedStatus',
        'checklist_dsp_assigned_status' => 'setChecklistDspAssignedStatus',
        'checklist_ad_set_datetime_status' => 'setChecklistAdSetDatetimeStatus',
        'checklist_ad_set_campaign_status' => 'setChecklistAdSetCampaignStatus',
        'checklist_ad_set_campaign_datetime_status' => 'setChecklistAdSetCampaignDatetimeStatus',
        'checklist_ad_set_advertiser_balance_status' => 'setChecklistAdSetAdvertiserBalanceStatus',
        'checklist_ad_set_organization_balance_status' => 'setChecklistAdSetOrganizationBalanceStatus',
        'checklist_ad_set_organization_status' => 'setChecklistAdSetOrganizationStatus',
        'checklist_ad_set_agency_balance_status' => 'setChecklistAdSetAgencyBalanceStatus',
        'checklist_ad_set_agency_status' => 'setChecklistAdSetAgencyStatus',
        'checklist_ad_set_advertiser_status' => 'setChecklistAdSetAdvertiserStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'checklist_ad_status' => 'getChecklistAdStatus',
        'checklist_dsp_status' => 'getChecklistDspStatus',
        'checklist_ad_set_status' => 'getChecklistAdSetStatus',
        'checklist_ad_set_budget_status' => 'getChecklistAdSetBudgetStatus',
        'checklist_ad_assigned_status' => 'getChecklistAdAssignedStatus',
        'checklist_dsp_assigned_status' => 'getChecklistDspAssignedStatus',
        'checklist_ad_set_datetime_status' => 'getChecklistAdSetDatetimeStatus',
        'checklist_ad_set_campaign_status' => 'getChecklistAdSetCampaignStatus',
        'checklist_ad_set_campaign_datetime_status' => 'getChecklistAdSetCampaignDatetimeStatus',
        'checklist_ad_set_advertiser_balance_status' => 'getChecklistAdSetAdvertiserBalanceStatus',
        'checklist_ad_set_organization_balance_status' => 'getChecklistAdSetOrganizationBalanceStatus',
        'checklist_ad_set_organization_status' => 'getChecklistAdSetOrganizationStatus',
        'checklist_ad_set_agency_balance_status' => 'getChecklistAdSetAgencyBalanceStatus',
        'checklist_ad_set_agency_status' => 'getChecklistAdSetAgencyStatus',
        'checklist_ad_set_advertiser_status' => 'getChecklistAdSetAdvertiserStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const CHECKLIST_AD_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_DSP_STATUS_ACTIVE = 'active';
    const CHECKLIST_DSP_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_DSP_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_BUDGET_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_BUDGET_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_BUDGET_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_ASSIGNED_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_ASSIGNED_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_ASSIGNED_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_DSP_ASSIGNED_STATUS_ACTIVE = 'active';
    const CHECKLIST_DSP_ASSIGNED_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_DSP_ASSIGNED_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_DATETIME_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_DATETIME_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_DATETIME_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_CAMPAIGN_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_CAMPAIGN_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_CAMPAIGN_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_ORGANIZATION_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_ORGANIZATION_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_ORGANIZATION_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_AGENCY_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_AGENCY_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_AGENCY_STATUS_PARTIAL_ACTIVE = 'partial_active';
    const CHECKLIST_AD_SET_ADVERTISER_STATUS_ACTIVE = 'active';
    const CHECKLIST_AD_SET_ADVERTISER_STATUS_INACTIVE = 'inactive';
    const CHECKLIST_AD_SET_ADVERTISER_STATUS_PARTIAL_ACTIVE = 'partial_active';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_STATUS_ACTIVE,
            self::CHECKLIST_AD_STATUS_INACTIVE,
            self::CHECKLIST_AD_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistDspStatusAllowableValues()
    {
        return [
            self::CHECKLIST_DSP_STATUS_ACTIVE,
            self::CHECKLIST_DSP_STATUS_INACTIVE,
            self::CHECKLIST_DSP_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetBudgetStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_BUDGET_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_BUDGET_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_BUDGET_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdAssignedStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_ASSIGNED_STATUS_ACTIVE,
            self::CHECKLIST_AD_ASSIGNED_STATUS_INACTIVE,
            self::CHECKLIST_AD_ASSIGNED_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistDspAssignedStatusAllowableValues()
    {
        return [
            self::CHECKLIST_DSP_ASSIGNED_STATUS_ACTIVE,
            self::CHECKLIST_DSP_ASSIGNED_STATUS_INACTIVE,
            self::CHECKLIST_DSP_ASSIGNED_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetDatetimeStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_DATETIME_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_DATETIME_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_DATETIME_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetCampaignStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_CAMPAIGN_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_CAMPAIGN_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_CAMPAIGN_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetCampaignDatetimeStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_CAMPAIGN_DATETIME_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetAdvertiserBalanceStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_ADVERTISER_BALANCE_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetOrganizationBalanceStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_ORGANIZATION_BALANCE_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetOrganizationStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_ORGANIZATION_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_ORGANIZATION_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_ORGANIZATION_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetAgencyBalanceStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_AGENCY_BALANCE_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetAgencyStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_AGENCY_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_AGENCY_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_AGENCY_STATUS_PARTIAL_ACTIVE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChecklistAdSetAdvertiserStatusAllowableValues()
    {
        return [
            self::CHECKLIST_AD_SET_ADVERTISER_STATUS_ACTIVE,
            self::CHECKLIST_AD_SET_ADVERTISER_STATUS_INACTIVE,
            self::CHECKLIST_AD_SET_ADVERTISER_STATUS_PARTIAL_ACTIVE,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['checklist_ad_status'] = isset($data['checklist_ad_status']) ? $data['checklist_ad_status'] : null;
        $this->container['checklist_dsp_status'] = isset($data['checklist_dsp_status']) ? $data['checklist_dsp_status'] : null;
        $this->container['checklist_ad_set_status'] = isset($data['checklist_ad_set_status']) ? $data['checklist_ad_set_status'] : null;
        $this->container['checklist_ad_set_budget_status'] = isset($data['checklist_ad_set_budget_status']) ? $data['checklist_ad_set_budget_status'] : null;
        $this->container['checklist_ad_assigned_status'] = isset($data['checklist_ad_assigned_status']) ? $data['checklist_ad_assigned_status'] : null;
        $this->container['checklist_dsp_assigned_status'] = isset($data['checklist_dsp_assigned_status']) ? $data['checklist_dsp_assigned_status'] : null;
        $this->container['checklist_ad_set_datetime_status'] = isset($data['checklist_ad_set_datetime_status']) ? $data['checklist_ad_set_datetime_status'] : null;
        $this->container['checklist_ad_set_campaign_status'] = isset($data['checklist_ad_set_campaign_status']) ? $data['checklist_ad_set_campaign_status'] : null;
        $this->container['checklist_ad_set_campaign_datetime_status'] = isset($data['checklist_ad_set_campaign_datetime_status']) ? $data['checklist_ad_set_campaign_datetime_status'] : null;
        $this->container['checklist_ad_set_advertiser_balance_status'] = isset($data['checklist_ad_set_advertiser_balance_status']) ? $data['checklist_ad_set_advertiser_balance_status'] : null;
        $this->container['checklist_ad_set_organization_balance_status'] = isset($data['checklist_ad_set_organization_balance_status']) ? $data['checklist_ad_set_organization_balance_status'] : null;
        $this->container['checklist_ad_set_organization_status'] = isset($data['checklist_ad_set_organization_status']) ? $data['checklist_ad_set_organization_status'] : null;
        $this->container['checklist_ad_set_agency_balance_status'] = isset($data['checklist_ad_set_agency_balance_status']) ? $data['checklist_ad_set_agency_balance_status'] : null;
        $this->container['checklist_ad_set_agency_status'] = isset($data['checklist_ad_set_agency_status']) ? $data['checklist_ad_set_agency_status'] : null;
        $this->container['checklist_ad_set_advertiser_status'] = isset($data['checklist_ad_set_advertiser_status']) ? $data['checklist_ad_set_advertiser_status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getChecklistAdStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_status']) && !in_array($this->container['checklist_ad_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistDspStatusAllowableValues();
        if (!is_null($this->container['checklist_dsp_status']) && !in_array($this->container['checklist_dsp_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_dsp_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_status']) && !in_array($this->container['checklist_ad_set_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetBudgetStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_budget_status']) && !in_array($this->container['checklist_ad_set_budget_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_budget_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdAssignedStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_assigned_status']) && !in_array($this->container['checklist_ad_assigned_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_assigned_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistDspAssignedStatusAllowableValues();
        if (!is_null($this->container['checklist_dsp_assigned_status']) && !in_array($this->container['checklist_dsp_assigned_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_dsp_assigned_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetDatetimeStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_datetime_status']) && !in_array($this->container['checklist_ad_set_datetime_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_datetime_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetCampaignStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_campaign_status']) && !in_array($this->container['checklist_ad_set_campaign_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_campaign_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetCampaignDatetimeStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_campaign_datetime_status']) && !in_array($this->container['checklist_ad_set_campaign_datetime_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_campaign_datetime_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetAdvertiserBalanceStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_advertiser_balance_status']) && !in_array($this->container['checklist_ad_set_advertiser_balance_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_advertiser_balance_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetOrganizationBalanceStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_organization_balance_status']) && !in_array($this->container['checklist_ad_set_organization_balance_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_organization_balance_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetOrganizationStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_organization_status']) && !in_array($this->container['checklist_ad_set_organization_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_organization_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetAgencyBalanceStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_agency_balance_status']) && !in_array($this->container['checklist_ad_set_agency_balance_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_agency_balance_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetAgencyStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_agency_status']) && !in_array($this->container['checklist_ad_set_agency_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_agency_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChecklistAdSetAdvertiserStatusAllowableValues();
        if (!is_null($this->container['checklist_ad_set_advertiser_status']) && !in_array($this->container['checklist_ad_set_advertiser_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'checklist_ad_set_advertiser_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets checklist_ad_status
     *
     * @return string|null
     */
    public function getChecklistAdStatus()
    {
        return $this->container['checklist_ad_status'];
    }

    /**
     * Sets checklist_ad_status
     *
     * @param string|null $checklist_ad_status checklist_ad_status
     *
     * @return $this
     */
    public function setChecklistAdStatus($checklist_ad_status)
    {
        $allowedValues = $this->getChecklistAdStatusAllowableValues();
        if (!is_null($checklist_ad_status) && !in_array($checklist_ad_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_status'] = $checklist_ad_status;

        return $this;
    }

    /**
     * Gets checklist_dsp_status
     *
     * @return string|null
     */
    public function getChecklistDspStatus()
    {
        return $this->container['checklist_dsp_status'];
    }

    /**
     * Sets checklist_dsp_status
     *
     * @param string|null $checklist_dsp_status checklist_dsp_status
     *
     * @return $this
     */
    public function setChecklistDspStatus($checklist_dsp_status)
    {
        $allowedValues = $this->getChecklistDspStatusAllowableValues();
        if (!is_null($checklist_dsp_status) && !in_array($checklist_dsp_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_dsp_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_dsp_status'] = $checklist_dsp_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_status
     *
     * @return string|null
     */
    public function getChecklistAdSetStatus()
    {
        return $this->container['checklist_ad_set_status'];
    }

    /**
     * Sets checklist_ad_set_status
     *
     * @param string|null $checklist_ad_set_status checklist_ad_set_status
     *
     * @return $this
     */
    public function setChecklistAdSetStatus($checklist_ad_set_status)
    {
        $allowedValues = $this->getChecklistAdSetStatusAllowableValues();
        if (!is_null($checklist_ad_set_status) && !in_array($checklist_ad_set_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_status'] = $checklist_ad_set_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_budget_status
     *
     * @return string|null
     */
    public function getChecklistAdSetBudgetStatus()
    {
        return $this->container['checklist_ad_set_budget_status'];
    }

    /**
     * Sets checklist_ad_set_budget_status
     *
     * @param string|null $checklist_ad_set_budget_status checklist_ad_set_budget_status
     *
     * @return $this
     */
    public function setChecklistAdSetBudgetStatus($checklist_ad_set_budget_status)
    {
        $allowedValues = $this->getChecklistAdSetBudgetStatusAllowableValues();
        if (!is_null($checklist_ad_set_budget_status) && !in_array($checklist_ad_set_budget_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_budget_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_budget_status'] = $checklist_ad_set_budget_status;

        return $this;
    }

    /**
     * Gets checklist_ad_assigned_status
     *
     * @return string|null
     */
    public function getChecklistAdAssignedStatus()
    {
        return $this->container['checklist_ad_assigned_status'];
    }

    /**
     * Sets checklist_ad_assigned_status
     *
     * @param string|null $checklist_ad_assigned_status checklist_ad_assigned_status
     *
     * @return $this
     */
    public function setChecklistAdAssignedStatus($checklist_ad_assigned_status)
    {
        $allowedValues = $this->getChecklistAdAssignedStatusAllowableValues();
        if (!is_null($checklist_ad_assigned_status) && !in_array($checklist_ad_assigned_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_assigned_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_assigned_status'] = $checklist_ad_assigned_status;

        return $this;
    }

    /**
     * Gets checklist_dsp_assigned_status
     *
     * @return string|null
     */
    public function getChecklistDspAssignedStatus()
    {
        return $this->container['checklist_dsp_assigned_status'];
    }

    /**
     * Sets checklist_dsp_assigned_status
     *
     * @param string|null $checklist_dsp_assigned_status checklist_dsp_assigned_status
     *
     * @return $this
     */
    public function setChecklistDspAssignedStatus($checklist_dsp_assigned_status)
    {
        $allowedValues = $this->getChecklistDspAssignedStatusAllowableValues();
        if (!is_null($checklist_dsp_assigned_status) && !in_array($checklist_dsp_assigned_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_dsp_assigned_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_dsp_assigned_status'] = $checklist_dsp_assigned_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_datetime_status
     *
     * @return string|null
     */
    public function getChecklistAdSetDatetimeStatus()
    {
        return $this->container['checklist_ad_set_datetime_status'];
    }

    /**
     * Sets checklist_ad_set_datetime_status
     *
     * @param string|null $checklist_ad_set_datetime_status checklist_ad_set_datetime_status
     *
     * @return $this
     */
    public function setChecklistAdSetDatetimeStatus($checklist_ad_set_datetime_status)
    {
        $allowedValues = $this->getChecklistAdSetDatetimeStatusAllowableValues();
        if (!is_null($checklist_ad_set_datetime_status) && !in_array($checklist_ad_set_datetime_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_datetime_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_datetime_status'] = $checklist_ad_set_datetime_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_campaign_status
     *
     * @return string|null
     */
    public function getChecklistAdSetCampaignStatus()
    {
        return $this->container['checklist_ad_set_campaign_status'];
    }

    /**
     * Sets checklist_ad_set_campaign_status
     *
     * @param string|null $checklist_ad_set_campaign_status checklist_ad_set_campaign_status
     *
     * @return $this
     */
    public function setChecklistAdSetCampaignStatus($checklist_ad_set_campaign_status)
    {
        $allowedValues = $this->getChecklistAdSetCampaignStatusAllowableValues();
        if (!is_null($checklist_ad_set_campaign_status) && !in_array($checklist_ad_set_campaign_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_campaign_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_campaign_status'] = $checklist_ad_set_campaign_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_campaign_datetime_status
     *
     * @return string|null
     */
    public function getChecklistAdSetCampaignDatetimeStatus()
    {
        return $this->container['checklist_ad_set_campaign_datetime_status'];
    }

    /**
     * Sets checklist_ad_set_campaign_datetime_status
     *
     * @param string|null $checklist_ad_set_campaign_datetime_status checklist_ad_set_campaign_datetime_status
     *
     * @return $this
     */
    public function setChecklistAdSetCampaignDatetimeStatus($checklist_ad_set_campaign_datetime_status)
    {
        $allowedValues = $this->getChecklistAdSetCampaignDatetimeStatusAllowableValues();
        if (!is_null($checklist_ad_set_campaign_datetime_status) && !in_array($checklist_ad_set_campaign_datetime_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_campaign_datetime_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_campaign_datetime_status'] = $checklist_ad_set_campaign_datetime_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_advertiser_balance_status
     *
     * @return string|null
     */
    public function getChecklistAdSetAdvertiserBalanceStatus()
    {
        return $this->container['checklist_ad_set_advertiser_balance_status'];
    }

    /**
     * Sets checklist_ad_set_advertiser_balance_status
     *
     * @param string|null $checklist_ad_set_advertiser_balance_status checklist_ad_set_advertiser_balance_status
     *
     * @return $this
     */
    public function setChecklistAdSetAdvertiserBalanceStatus($checklist_ad_set_advertiser_balance_status)
    {
        $allowedValues = $this->getChecklistAdSetAdvertiserBalanceStatusAllowableValues();
        if (!is_null($checklist_ad_set_advertiser_balance_status) && !in_array($checklist_ad_set_advertiser_balance_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_advertiser_balance_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_advertiser_balance_status'] = $checklist_ad_set_advertiser_balance_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_organization_balance_status
     *
     * @return string|null
     */
    public function getChecklistAdSetOrganizationBalanceStatus()
    {
        return $this->container['checklist_ad_set_organization_balance_status'];
    }

    /**
     * Sets checklist_ad_set_organization_balance_status
     *
     * @param string|null $checklist_ad_set_organization_balance_status checklist_ad_set_organization_balance_status
     *
     * @return $this
     */
    public function setChecklistAdSetOrganizationBalanceStatus($checklist_ad_set_organization_balance_status)
    {
        $allowedValues = $this->getChecklistAdSetOrganizationBalanceStatusAllowableValues();
        if (!is_null($checklist_ad_set_organization_balance_status) && !in_array($checklist_ad_set_organization_balance_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_organization_balance_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_organization_balance_status'] = $checklist_ad_set_organization_balance_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_organization_status
     *
     * @return string|null
     */
    public function getChecklistAdSetOrganizationStatus()
    {
        return $this->container['checklist_ad_set_organization_status'];
    }

    /**
     * Sets checklist_ad_set_organization_status
     *
     * @param string|null $checklist_ad_set_organization_status checklist_ad_set_organization_status
     *
     * @return $this
     */
    public function setChecklistAdSetOrganizationStatus($checklist_ad_set_organization_status)
    {
        $allowedValues = $this->getChecklistAdSetOrganizationStatusAllowableValues();
        if (!is_null($checklist_ad_set_organization_status) && !in_array($checklist_ad_set_organization_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_organization_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_organization_status'] = $checklist_ad_set_organization_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_agency_balance_status
     *
     * @return string|null
     */
    public function getChecklistAdSetAgencyBalanceStatus()
    {
        return $this->container['checklist_ad_set_agency_balance_status'];
    }

    /**
     * Sets checklist_ad_set_agency_balance_status
     *
     * @param string|null $checklist_ad_set_agency_balance_status checklist_ad_set_agency_balance_status
     *
     * @return $this
     */
    public function setChecklistAdSetAgencyBalanceStatus($checklist_ad_set_agency_balance_status)
    {
        $allowedValues = $this->getChecklistAdSetAgencyBalanceStatusAllowableValues();
        if (!is_null($checklist_ad_set_agency_balance_status) && !in_array($checklist_ad_set_agency_balance_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_agency_balance_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_agency_balance_status'] = $checklist_ad_set_agency_balance_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_agency_status
     *
     * @return string|null
     */
    public function getChecklistAdSetAgencyStatus()
    {
        return $this->container['checklist_ad_set_agency_status'];
    }

    /**
     * Sets checklist_ad_set_agency_status
     *
     * @param string|null $checklist_ad_set_agency_status checklist_ad_set_agency_status
     *
     * @return $this
     */
    public function setChecklistAdSetAgencyStatus($checklist_ad_set_agency_status)
    {
        $allowedValues = $this->getChecklistAdSetAgencyStatusAllowableValues();
        if (!is_null($checklist_ad_set_agency_status) && !in_array($checklist_ad_set_agency_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_agency_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_agency_status'] = $checklist_ad_set_agency_status;

        return $this;
    }

    /**
     * Gets checklist_ad_set_advertiser_status
     *
     * @return string|null
     */
    public function getChecklistAdSetAdvertiserStatus()
    {
        return $this->container['checklist_ad_set_advertiser_status'];
    }

    /**
     * Sets checklist_ad_set_advertiser_status
     *
     * @param string|null $checklist_ad_set_advertiser_status checklist_ad_set_advertiser_status
     *
     * @return $this
     */
    public function setChecklistAdSetAdvertiserStatus($checklist_ad_set_advertiser_status)
    {
        $allowedValues = $this->getChecklistAdSetAdvertiserStatusAllowableValues();
        if (!is_null($checklist_ad_set_advertiser_status) && !in_array($checklist_ad_set_advertiser_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'checklist_ad_set_advertiser_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['checklist_ad_set_advertiser_status'] = $checklist_ad_set_advertiser_status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


