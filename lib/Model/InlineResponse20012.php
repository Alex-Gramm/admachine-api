<?php
/**
 * InlineResponse20012
 *
 * PHP version 7.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PLATFORM.IO
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InlineResponse20012 Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InlineResponse20012 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_12';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'statuses' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_statuses' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_approval_statuses' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_attributes' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'iab_categories' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'time_zones' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'frequency_cap_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'frequency_cap_periods' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'pixel_events_repeats' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'repeat_merit_event_periods' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'post_window_intervals' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'channels' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'budget_pacing_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'budget_pacing_budget_intervals' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'frequency_cap_pacing_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'frequency_cap_pacing_periods' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'frequency_cap_source_definition' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'rtb_supply_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'inventory_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'target_any_or_all_of_segments' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'time' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'days' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'day_part_timezones' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'relation_type' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'site_list_relation_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'sizes' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'add_audio' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'secure_type_lists' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'call_to_actions' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'video_api_framework_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'vast_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'bid_type' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_events' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'pixel_type' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'test_mode' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'permissions' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'data_storages' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'impressions_counter_type' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'targeting_delivery_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'rtb_integration_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'messenger_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'platform_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'signup_roles' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'user_details_where_find' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'media_buying_experience' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'monthly_impressions_volume' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'creative_image_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'user_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'publisher_payment_types' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]',
        'datacenters' => '\OpenAPI\Client\Model\InlineResponse20012Statuses[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'statuses' => null,
        'creative_statuses' => null,
        'creative_approval_statuses' => null,
        'creative_types' => null,
        'creative_attributes' => null,
        'iab_categories' => null,
        'time_zones' => null,
        'frequency_cap_types' => null,
        'frequency_cap_periods' => null,
        'pixel_events_repeats' => null,
        'repeat_merit_event_periods' => null,
        'post_window_intervals' => null,
        'channels' => null,
        'budget_pacing_types' => null,
        'budget_pacing_budget_intervals' => null,
        'frequency_cap_pacing_types' => null,
        'frequency_cap_pacing_periods' => null,
        'frequency_cap_source_definition' => null,
        'rtb_supply_types' => null,
        'inventory_types' => null,
        'target_any_or_all_of_segments' => null,
        'time' => null,
        'days' => null,
        'day_part_timezones' => null,
        'relation_type' => null,
        'site_list_relation_types' => null,
        'sizes' => null,
        'add_audio' => null,
        'secure_type_lists' => null,
        'call_to_actions' => null,
        'video_api_framework_types' => null,
        'vast_types' => null,
        'bid_type' => null,
        'creative_events' => null,
        'pixel_type' => null,
        'test_mode' => null,
        'permissions' => null,
        'data_storages' => null,
        'impressions_counter_type' => null,
        'targeting_delivery_types' => null,
        'rtb_integration_types' => null,
        'messenger_types' => null,
        'platform_types' => null,
        'signup_roles' => null,
        'user_details_where_find' => null,
        'media_buying_experience' => null,
        'monthly_impressions_volume' => null,
        'creative_image_types' => null,
        'user_types' => null,
        'publisher_payment_types' => null,
        'datacenters' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'statuses' => 'statuses',
        'creative_statuses' => 'creative_statuses',
        'creative_approval_statuses' => 'creative_approval_statuses',
        'creative_types' => 'creative_types',
        'creative_attributes' => 'creative_attributes',
        'iab_categories' => 'iab_categories',
        'time_zones' => 'time_zones',
        'frequency_cap_types' => 'frequency_cap_types',
        'frequency_cap_periods' => 'frequency_cap_periods',
        'pixel_events_repeats' => 'pixel_events_repeats',
        'repeat_merit_event_periods' => 'repeat_merit_event_periods',
        'post_window_intervals' => 'post_window_intervals',
        'channels' => 'channels',
        'budget_pacing_types' => 'budget_pacing_types',
        'budget_pacing_budget_intervals' => 'budget_pacing_budget_intervals',
        'frequency_cap_pacing_types' => 'frequency_cap_pacing_types',
        'frequency_cap_pacing_periods' => 'frequency_cap_pacing_periods',
        'frequency_cap_source_definition' => 'frequency_cap_source_definition',
        'rtb_supply_types' => 'rtb_supply_types',
        'inventory_types' => 'inventory_types',
        'target_any_or_all_of_segments' => 'target_any_or_all_of_segments',
        'time' => 'time',
        'days' => 'days',
        'day_part_timezones' => 'day_part_timezones',
        'relation_type' => 'relation_type',
        'site_list_relation_types' => 'site_list_relation_types',
        'sizes' => 'sizes',
        'add_audio' => 'add_audio',
        'secure_type_lists' => 'secure_type_lists',
        'call_to_actions' => 'call_to_actions',
        'video_api_framework_types' => 'video_api_framework_types',
        'vast_types' => 'vast_types',
        'bid_type' => 'bid_type',
        'creative_events' => 'creative_events',
        'pixel_type' => 'pixel_type',
        'test_mode' => 'test_mode',
        'permissions' => 'permissions',
        'data_storages' => 'data_storages',
        'impressions_counter_type' => 'impressions_counter_type',
        'targeting_delivery_types' => 'targeting_delivery_types',
        'rtb_integration_types' => 'rtb_integration_types',
        'messenger_types' => 'messenger_types',
        'platform_types' => 'platform_types',
        'signup_roles' => 'signup_roles',
        'user_details_where_find' => 'user_details_where_find',
        'media_buying_experience' => 'media_buying_experience',
        'monthly_impressions_volume' => 'monthly_impressions_volume',
        'creative_image_types' => 'creative_image_types',
        'user_types' => 'user_types',
        'publisher_payment_types' => 'publisher_payment_types',
        'datacenters' => 'datacenters'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'statuses' => 'setStatuses',
        'creative_statuses' => 'setCreativeStatuses',
        'creative_approval_statuses' => 'setCreativeApprovalStatuses',
        'creative_types' => 'setCreativeTypes',
        'creative_attributes' => 'setCreativeAttributes',
        'iab_categories' => 'setIabCategories',
        'time_zones' => 'setTimeZones',
        'frequency_cap_types' => 'setFrequencyCapTypes',
        'frequency_cap_periods' => 'setFrequencyCapPeriods',
        'pixel_events_repeats' => 'setPixelEventsRepeats',
        'repeat_merit_event_periods' => 'setRepeatMeritEventPeriods',
        'post_window_intervals' => 'setPostWindowIntervals',
        'channels' => 'setChannels',
        'budget_pacing_types' => 'setBudgetPacingTypes',
        'budget_pacing_budget_intervals' => 'setBudgetPacingBudgetIntervals',
        'frequency_cap_pacing_types' => 'setFrequencyCapPacingTypes',
        'frequency_cap_pacing_periods' => 'setFrequencyCapPacingPeriods',
        'frequency_cap_source_definition' => 'setFrequencyCapSourceDefinition',
        'rtb_supply_types' => 'setRtbSupplyTypes',
        'inventory_types' => 'setInventoryTypes',
        'target_any_or_all_of_segments' => 'setTargetAnyOrAllOfSegments',
        'time' => 'setTime',
        'days' => 'setDays',
        'day_part_timezones' => 'setDayPartTimezones',
        'relation_type' => 'setRelationType',
        'site_list_relation_types' => 'setSiteListRelationTypes',
        'sizes' => 'setSizes',
        'add_audio' => 'setAddAudio',
        'secure_type_lists' => 'setSecureTypeLists',
        'call_to_actions' => 'setCallToActions',
        'video_api_framework_types' => 'setVideoApiFrameworkTypes',
        'vast_types' => 'setVastTypes',
        'bid_type' => 'setBidType',
        'creative_events' => 'setCreativeEvents',
        'pixel_type' => 'setPixelType',
        'test_mode' => 'setTestMode',
        'permissions' => 'setPermissions',
        'data_storages' => 'setDataStorages',
        'impressions_counter_type' => 'setImpressionsCounterType',
        'targeting_delivery_types' => 'setTargetingDeliveryTypes',
        'rtb_integration_types' => 'setRtbIntegrationTypes',
        'messenger_types' => 'setMessengerTypes',
        'platform_types' => 'setPlatformTypes',
        'signup_roles' => 'setSignupRoles',
        'user_details_where_find' => 'setUserDetailsWhereFind',
        'media_buying_experience' => 'setMediaBuyingExperience',
        'monthly_impressions_volume' => 'setMonthlyImpressionsVolume',
        'creative_image_types' => 'setCreativeImageTypes',
        'user_types' => 'setUserTypes',
        'publisher_payment_types' => 'setPublisherPaymentTypes',
        'datacenters' => 'setDatacenters'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'statuses' => 'getStatuses',
        'creative_statuses' => 'getCreativeStatuses',
        'creative_approval_statuses' => 'getCreativeApprovalStatuses',
        'creative_types' => 'getCreativeTypes',
        'creative_attributes' => 'getCreativeAttributes',
        'iab_categories' => 'getIabCategories',
        'time_zones' => 'getTimeZones',
        'frequency_cap_types' => 'getFrequencyCapTypes',
        'frequency_cap_periods' => 'getFrequencyCapPeriods',
        'pixel_events_repeats' => 'getPixelEventsRepeats',
        'repeat_merit_event_periods' => 'getRepeatMeritEventPeriods',
        'post_window_intervals' => 'getPostWindowIntervals',
        'channels' => 'getChannels',
        'budget_pacing_types' => 'getBudgetPacingTypes',
        'budget_pacing_budget_intervals' => 'getBudgetPacingBudgetIntervals',
        'frequency_cap_pacing_types' => 'getFrequencyCapPacingTypes',
        'frequency_cap_pacing_periods' => 'getFrequencyCapPacingPeriods',
        'frequency_cap_source_definition' => 'getFrequencyCapSourceDefinition',
        'rtb_supply_types' => 'getRtbSupplyTypes',
        'inventory_types' => 'getInventoryTypes',
        'target_any_or_all_of_segments' => 'getTargetAnyOrAllOfSegments',
        'time' => 'getTime',
        'days' => 'getDays',
        'day_part_timezones' => 'getDayPartTimezones',
        'relation_type' => 'getRelationType',
        'site_list_relation_types' => 'getSiteListRelationTypes',
        'sizes' => 'getSizes',
        'add_audio' => 'getAddAudio',
        'secure_type_lists' => 'getSecureTypeLists',
        'call_to_actions' => 'getCallToActions',
        'video_api_framework_types' => 'getVideoApiFrameworkTypes',
        'vast_types' => 'getVastTypes',
        'bid_type' => 'getBidType',
        'creative_events' => 'getCreativeEvents',
        'pixel_type' => 'getPixelType',
        'test_mode' => 'getTestMode',
        'permissions' => 'getPermissions',
        'data_storages' => 'getDataStorages',
        'impressions_counter_type' => 'getImpressionsCounterType',
        'targeting_delivery_types' => 'getTargetingDeliveryTypes',
        'rtb_integration_types' => 'getRtbIntegrationTypes',
        'messenger_types' => 'getMessengerTypes',
        'platform_types' => 'getPlatformTypes',
        'signup_roles' => 'getSignupRoles',
        'user_details_where_find' => 'getUserDetailsWhereFind',
        'media_buying_experience' => 'getMediaBuyingExperience',
        'monthly_impressions_volume' => 'getMonthlyImpressionsVolume',
        'creative_image_types' => 'getCreativeImageTypes',
        'user_types' => 'getUserTypes',
        'publisher_payment_types' => 'getPublisherPaymentTypes',
        'datacenters' => 'getDatacenters'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['statuses'] = isset($data['statuses']) ? $data['statuses'] : null;
        $this->container['creative_statuses'] = isset($data['creative_statuses']) ? $data['creative_statuses'] : null;
        $this->container['creative_approval_statuses'] = isset($data['creative_approval_statuses']) ? $data['creative_approval_statuses'] : null;
        $this->container['creative_types'] = isset($data['creative_types']) ? $data['creative_types'] : null;
        $this->container['creative_attributes'] = isset($data['creative_attributes']) ? $data['creative_attributes'] : null;
        $this->container['iab_categories'] = isset($data['iab_categories']) ? $data['iab_categories'] : null;
        $this->container['time_zones'] = isset($data['time_zones']) ? $data['time_zones'] : null;
        $this->container['frequency_cap_types'] = isset($data['frequency_cap_types']) ? $data['frequency_cap_types'] : null;
        $this->container['frequency_cap_periods'] = isset($data['frequency_cap_periods']) ? $data['frequency_cap_periods'] : null;
        $this->container['pixel_events_repeats'] = isset($data['pixel_events_repeats']) ? $data['pixel_events_repeats'] : null;
        $this->container['repeat_merit_event_periods'] = isset($data['repeat_merit_event_periods']) ? $data['repeat_merit_event_periods'] : null;
        $this->container['post_window_intervals'] = isset($data['post_window_intervals']) ? $data['post_window_intervals'] : null;
        $this->container['channels'] = isset($data['channels']) ? $data['channels'] : null;
        $this->container['budget_pacing_types'] = isset($data['budget_pacing_types']) ? $data['budget_pacing_types'] : null;
        $this->container['budget_pacing_budget_intervals'] = isset($data['budget_pacing_budget_intervals']) ? $data['budget_pacing_budget_intervals'] : null;
        $this->container['frequency_cap_pacing_types'] = isset($data['frequency_cap_pacing_types']) ? $data['frequency_cap_pacing_types'] : null;
        $this->container['frequency_cap_pacing_periods'] = isset($data['frequency_cap_pacing_periods']) ? $data['frequency_cap_pacing_periods'] : null;
        $this->container['frequency_cap_source_definition'] = isset($data['frequency_cap_source_definition']) ? $data['frequency_cap_source_definition'] : null;
        $this->container['rtb_supply_types'] = isset($data['rtb_supply_types']) ? $data['rtb_supply_types'] : null;
        $this->container['inventory_types'] = isset($data['inventory_types']) ? $data['inventory_types'] : null;
        $this->container['target_any_or_all_of_segments'] = isset($data['target_any_or_all_of_segments']) ? $data['target_any_or_all_of_segments'] : null;
        $this->container['time'] = isset($data['time']) ? $data['time'] : null;
        $this->container['days'] = isset($data['days']) ? $data['days'] : null;
        $this->container['day_part_timezones'] = isset($data['day_part_timezones']) ? $data['day_part_timezones'] : null;
        $this->container['relation_type'] = isset($data['relation_type']) ? $data['relation_type'] : null;
        $this->container['site_list_relation_types'] = isset($data['site_list_relation_types']) ? $data['site_list_relation_types'] : null;
        $this->container['sizes'] = isset($data['sizes']) ? $data['sizes'] : null;
        $this->container['add_audio'] = isset($data['add_audio']) ? $data['add_audio'] : null;
        $this->container['secure_type_lists'] = isset($data['secure_type_lists']) ? $data['secure_type_lists'] : null;
        $this->container['call_to_actions'] = isset($data['call_to_actions']) ? $data['call_to_actions'] : null;
        $this->container['video_api_framework_types'] = isset($data['video_api_framework_types']) ? $data['video_api_framework_types'] : null;
        $this->container['vast_types'] = isset($data['vast_types']) ? $data['vast_types'] : null;
        $this->container['bid_type'] = isset($data['bid_type']) ? $data['bid_type'] : null;
        $this->container['creative_events'] = isset($data['creative_events']) ? $data['creative_events'] : null;
        $this->container['pixel_type'] = isset($data['pixel_type']) ? $data['pixel_type'] : null;
        $this->container['test_mode'] = isset($data['test_mode']) ? $data['test_mode'] : null;
        $this->container['permissions'] = isset($data['permissions']) ? $data['permissions'] : null;
        $this->container['data_storages'] = isset($data['data_storages']) ? $data['data_storages'] : null;
        $this->container['impressions_counter_type'] = isset($data['impressions_counter_type']) ? $data['impressions_counter_type'] : null;
        $this->container['targeting_delivery_types'] = isset($data['targeting_delivery_types']) ? $data['targeting_delivery_types'] : null;
        $this->container['rtb_integration_types'] = isset($data['rtb_integration_types']) ? $data['rtb_integration_types'] : null;
        $this->container['messenger_types'] = isset($data['messenger_types']) ? $data['messenger_types'] : null;
        $this->container['platform_types'] = isset($data['platform_types']) ? $data['platform_types'] : null;
        $this->container['signup_roles'] = isset($data['signup_roles']) ? $data['signup_roles'] : null;
        $this->container['user_details_where_find'] = isset($data['user_details_where_find']) ? $data['user_details_where_find'] : null;
        $this->container['media_buying_experience'] = isset($data['media_buying_experience']) ? $data['media_buying_experience'] : null;
        $this->container['monthly_impressions_volume'] = isset($data['monthly_impressions_volume']) ? $data['monthly_impressions_volume'] : null;
        $this->container['creative_image_types'] = isset($data['creative_image_types']) ? $data['creative_image_types'] : null;
        $this->container['user_types'] = isset($data['user_types']) ? $data['user_types'] : null;
        $this->container['publisher_payment_types'] = isset($data['publisher_payment_types']) ? $data['publisher_payment_types'] : null;
        $this->container['datacenters'] = isset($data['datacenters']) ? $data['datacenters'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets statuses
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getStatuses()
    {
        return $this->container['statuses'];
    }

    /**
     * Sets statuses
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $statuses Statuses
     *
     * @return $this
     */
    public function setStatuses($statuses)
    {
        $this->container['statuses'] = $statuses;

        return $this;
    }

    /**
     * Gets creative_statuses
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeStatuses()
    {
        return $this->container['creative_statuses'];
    }

    /**
     * Sets creative_statuses
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_statuses Creative statuses
     *
     * @return $this
     */
    public function setCreativeStatuses($creative_statuses)
    {
        $this->container['creative_statuses'] = $creative_statuses;

        return $this;
    }

    /**
     * Gets creative_approval_statuses
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeApprovalStatuses()
    {
        return $this->container['creative_approval_statuses'];
    }

    /**
     * Sets creative_approval_statuses
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_approval_statuses Creative approval statuses
     *
     * @return $this
     */
    public function setCreativeApprovalStatuses($creative_approval_statuses)
    {
        $this->container['creative_approval_statuses'] = $creative_approval_statuses;

        return $this;
    }

    /**
     * Gets creative_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeTypes()
    {
        return $this->container['creative_types'];
    }

    /**
     * Sets creative_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_types Creative types
     *
     * @return $this
     */
    public function setCreativeTypes($creative_types)
    {
        $this->container['creative_types'] = $creative_types;

        return $this;
    }

    /**
     * Gets creative_attributes
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeAttributes()
    {
        return $this->container['creative_attributes'];
    }

    /**
     * Sets creative_attributes
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_attributes Creative attributes
     *
     * @return $this
     */
    public function setCreativeAttributes($creative_attributes)
    {
        $this->container['creative_attributes'] = $creative_attributes;

        return $this;
    }

    /**
     * Gets iab_categories
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getIabCategories()
    {
        return $this->container['iab_categories'];
    }

    /**
     * Sets iab_categories
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $iab_categories IAB Categories
     *
     * @return $this
     */
    public function setIabCategories($iab_categories)
    {
        $this->container['iab_categories'] = $iab_categories;

        return $this;
    }

    /**
     * Gets time_zones
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getTimeZones()
    {
        return $this->container['time_zones'];
    }

    /**
     * Sets time_zones
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $time_zones Time Zones
     *
     * @return $this
     */
    public function setTimeZones($time_zones)
    {
        $this->container['time_zones'] = $time_zones;

        return $this;
    }

    /**
     * Gets frequency_cap_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getFrequencyCapTypes()
    {
        return $this->container['frequency_cap_types'];
    }

    /**
     * Sets frequency_cap_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $frequency_cap_types List Frequency Cap Types
     *
     * @return $this
     */
    public function setFrequencyCapTypes($frequency_cap_types)
    {
        $this->container['frequency_cap_types'] = $frequency_cap_types;

        return $this;
    }

    /**
     * Gets frequency_cap_periods
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getFrequencyCapPeriods()
    {
        return $this->container['frequency_cap_periods'];
    }

    /**
     * Sets frequency_cap_periods
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $frequency_cap_periods List Frequency Cap Periods
     *
     * @return $this
     */
    public function setFrequencyCapPeriods($frequency_cap_periods)
    {
        $this->container['frequency_cap_periods'] = $frequency_cap_periods;

        return $this;
    }

    /**
     * Gets pixel_events_repeats
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPixelEventsRepeats()
    {
        return $this->container['pixel_events_repeats'];
    }

    /**
     * Sets pixel_events_repeats
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $pixel_events_repeats pixel_events_repeats
     *
     * @return $this
     */
    public function setPixelEventsRepeats($pixel_events_repeats)
    {
        $this->container['pixel_events_repeats'] = $pixel_events_repeats;

        return $this;
    }

    /**
     * Gets repeat_merit_event_periods
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getRepeatMeritEventPeriods()
    {
        return $this->container['repeat_merit_event_periods'];
    }

    /**
     * Sets repeat_merit_event_periods
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $repeat_merit_event_periods repeat_merit_event_periods
     *
     * @return $this
     */
    public function setRepeatMeritEventPeriods($repeat_merit_event_periods)
    {
        $this->container['repeat_merit_event_periods'] = $repeat_merit_event_periods;

        return $this;
    }

    /**
     * Gets post_window_intervals
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPostWindowIntervals()
    {
        return $this->container['post_window_intervals'];
    }

    /**
     * Sets post_window_intervals
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $post_window_intervals post_window_intervals
     *
     * @return $this
     */
    public function setPostWindowIntervals($post_window_intervals)
    {
        $this->container['post_window_intervals'] = $post_window_intervals;

        return $this;
    }

    /**
     * Gets channels
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getChannels()
    {
        return $this->container['channels'];
    }

    /**
     * Sets channels
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $channels channels
     *
     * @return $this
     */
    public function setChannels($channels)
    {
        $this->container['channels'] = $channels;

        return $this;
    }

    /**
     * Gets budget_pacing_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getBudgetPacingTypes()
    {
        return $this->container['budget_pacing_types'];
    }

    /**
     * Sets budget_pacing_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $budget_pacing_types budget_pacing_types
     *
     * @return $this
     */
    public function setBudgetPacingTypes($budget_pacing_types)
    {
        $this->container['budget_pacing_types'] = $budget_pacing_types;

        return $this;
    }

    /**
     * Gets budget_pacing_budget_intervals
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getBudgetPacingBudgetIntervals()
    {
        return $this->container['budget_pacing_budget_intervals'];
    }

    /**
     * Sets budget_pacing_budget_intervals
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $budget_pacing_budget_intervals budget_pacing_budget_intervals
     *
     * @return $this
     */
    public function setBudgetPacingBudgetIntervals($budget_pacing_budget_intervals)
    {
        $this->container['budget_pacing_budget_intervals'] = $budget_pacing_budget_intervals;

        return $this;
    }

    /**
     * Gets frequency_cap_pacing_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getFrequencyCapPacingTypes()
    {
        return $this->container['frequency_cap_pacing_types'];
    }

    /**
     * Sets frequency_cap_pacing_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $frequency_cap_pacing_types frequency_cap_pacing_types
     *
     * @return $this
     */
    public function setFrequencyCapPacingTypes($frequency_cap_pacing_types)
    {
        $this->container['frequency_cap_pacing_types'] = $frequency_cap_pacing_types;

        return $this;
    }

    /**
     * Gets frequency_cap_pacing_periods
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getFrequencyCapPacingPeriods()
    {
        return $this->container['frequency_cap_pacing_periods'];
    }

    /**
     * Sets frequency_cap_pacing_periods
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $frequency_cap_pacing_periods frequency_cap_pacing_periods
     *
     * @return $this
     */
    public function setFrequencyCapPacingPeriods($frequency_cap_pacing_periods)
    {
        $this->container['frequency_cap_pacing_periods'] = $frequency_cap_pacing_periods;

        return $this;
    }

    /**
     * Gets frequency_cap_source_definition
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getFrequencyCapSourceDefinition()
    {
        return $this->container['frequency_cap_source_definition'];
    }

    /**
     * Sets frequency_cap_source_definition
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $frequency_cap_source_definition frequency_cap_source_definition
     *
     * @return $this
     */
    public function setFrequencyCapSourceDefinition($frequency_cap_source_definition)
    {
        $this->container['frequency_cap_source_definition'] = $frequency_cap_source_definition;

        return $this;
    }

    /**
     * Gets rtb_supply_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getRtbSupplyTypes()
    {
        return $this->container['rtb_supply_types'];
    }

    /**
     * Sets rtb_supply_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $rtb_supply_types rtb_supply_types
     *
     * @return $this
     */
    public function setRtbSupplyTypes($rtb_supply_types)
    {
        $this->container['rtb_supply_types'] = $rtb_supply_types;

        return $this;
    }

    /**
     * Gets inventory_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getInventoryTypes()
    {
        return $this->container['inventory_types'];
    }

    /**
     * Sets inventory_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $inventory_types inventory_types
     *
     * @return $this
     */
    public function setInventoryTypes($inventory_types)
    {
        $this->container['inventory_types'] = $inventory_types;

        return $this;
    }

    /**
     * Gets target_any_or_all_of_segments
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getTargetAnyOrAllOfSegments()
    {
        return $this->container['target_any_or_all_of_segments'];
    }

    /**
     * Sets target_any_or_all_of_segments
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $target_any_or_all_of_segments target_any_or_all_of_segments
     *
     * @return $this
     */
    public function setTargetAnyOrAllOfSegments($target_any_or_all_of_segments)
    {
        $this->container['target_any_or_all_of_segments'] = $target_any_or_all_of_segments;

        return $this;
    }

    /**
     * Gets time
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getTime()
    {
        return $this->container['time'];
    }

    /**
     * Sets time
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $time time
     *
     * @return $this
     */
    public function setTime($time)
    {
        $this->container['time'] = $time;

        return $this;
    }

    /**
     * Gets days
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getDays()
    {
        return $this->container['days'];
    }

    /**
     * Sets days
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $days days
     *
     * @return $this
     */
    public function setDays($days)
    {
        $this->container['days'] = $days;

        return $this;
    }

    /**
     * Gets day_part_timezones
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getDayPartTimezones()
    {
        return $this->container['day_part_timezones'];
    }

    /**
     * Sets day_part_timezones
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $day_part_timezones day_part_timezones
     *
     * @return $this
     */
    public function setDayPartTimezones($day_part_timezones)
    {
        $this->container['day_part_timezones'] = $day_part_timezones;

        return $this;
    }

    /**
     * Gets relation_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getRelationType()
    {
        return $this->container['relation_type'];
    }

    /**
     * Sets relation_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $relation_type relation_type
     *
     * @return $this
     */
    public function setRelationType($relation_type)
    {
        $this->container['relation_type'] = $relation_type;

        return $this;
    }

    /**
     * Gets site_list_relation_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getSiteListRelationTypes()
    {
        return $this->container['site_list_relation_types'];
    }

    /**
     * Sets site_list_relation_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $site_list_relation_types site_list_relation_types
     *
     * @return $this
     */
    public function setSiteListRelationTypes($site_list_relation_types)
    {
        $this->container['site_list_relation_types'] = $site_list_relation_types;

        return $this;
    }

    /**
     * Gets sizes
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getSizes()
    {
        return $this->container['sizes'];
    }

    /**
     * Sets sizes
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $sizes sizes
     *
     * @return $this
     */
    public function setSizes($sizes)
    {
        $this->container['sizes'] = $sizes;

        return $this;
    }

    /**
     * Gets add_audio
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getAddAudio()
    {
        return $this->container['add_audio'];
    }

    /**
     * Sets add_audio
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $add_audio add_audio
     *
     * @return $this
     */
    public function setAddAudio($add_audio)
    {
        $this->container['add_audio'] = $add_audio;

        return $this;
    }

    /**
     * Gets secure_type_lists
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getSecureTypeLists()
    {
        return $this->container['secure_type_lists'];
    }

    /**
     * Sets secure_type_lists
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $secure_type_lists secure_type_lists
     *
     * @return $this
     */
    public function setSecureTypeLists($secure_type_lists)
    {
        $this->container['secure_type_lists'] = $secure_type_lists;

        return $this;
    }

    /**
     * Gets call_to_actions
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCallToActions()
    {
        return $this->container['call_to_actions'];
    }

    /**
     * Sets call_to_actions
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $call_to_actions call_to_actions
     *
     * @return $this
     */
    public function setCallToActions($call_to_actions)
    {
        $this->container['call_to_actions'] = $call_to_actions;

        return $this;
    }

    /**
     * Gets video_api_framework_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getVideoApiFrameworkTypes()
    {
        return $this->container['video_api_framework_types'];
    }

    /**
     * Sets video_api_framework_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $video_api_framework_types video_api_framework_types
     *
     * @return $this
     */
    public function setVideoApiFrameworkTypes($video_api_framework_types)
    {
        $this->container['video_api_framework_types'] = $video_api_framework_types;

        return $this;
    }

    /**
     * Gets vast_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getVastTypes()
    {
        return $this->container['vast_types'];
    }

    /**
     * Sets vast_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $vast_types vast_types
     *
     * @return $this
     */
    public function setVastTypes($vast_types)
    {
        $this->container['vast_types'] = $vast_types;

        return $this;
    }

    /**
     * Gets bid_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getBidType()
    {
        return $this->container['bid_type'];
    }

    /**
     * Sets bid_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $bid_type bid_type
     *
     * @return $this
     */
    public function setBidType($bid_type)
    {
        $this->container['bid_type'] = $bid_type;

        return $this;
    }

    /**
     * Gets creative_events
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeEvents()
    {
        return $this->container['creative_events'];
    }

    /**
     * Sets creative_events
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_events creative_events
     *
     * @return $this
     */
    public function setCreativeEvents($creative_events)
    {
        $this->container['creative_events'] = $creative_events;

        return $this;
    }

    /**
     * Gets pixel_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPixelType()
    {
        return $this->container['pixel_type'];
    }

    /**
     * Sets pixel_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $pixel_type pixel_type
     *
     * @return $this
     */
    public function setPixelType($pixel_type)
    {
        $this->container['pixel_type'] = $pixel_type;

        return $this;
    }

    /**
     * Gets test_mode
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getTestMode()
    {
        return $this->container['test_mode'];
    }

    /**
     * Sets test_mode
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $test_mode test_mode
     *
     * @return $this
     */
    public function setTestMode($test_mode)
    {
        $this->container['test_mode'] = $test_mode;

        return $this;
    }

    /**
     * Gets permissions
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPermissions()
    {
        return $this->container['permissions'];
    }

    /**
     * Sets permissions
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $permissions permissions
     *
     * @return $this
     */
    public function setPermissions($permissions)
    {
        $this->container['permissions'] = $permissions;

        return $this;
    }

    /**
     * Gets data_storages
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getDataStorages()
    {
        return $this->container['data_storages'];
    }

    /**
     * Sets data_storages
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $data_storages data_storages
     *
     * @return $this
     */
    public function setDataStorages($data_storages)
    {
        $this->container['data_storages'] = $data_storages;

        return $this;
    }

    /**
     * Gets impressions_counter_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getImpressionsCounterType()
    {
        return $this->container['impressions_counter_type'];
    }

    /**
     * Sets impressions_counter_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $impressions_counter_type impressions_counter_type
     *
     * @return $this
     */
    public function setImpressionsCounterType($impressions_counter_type)
    {
        $this->container['impressions_counter_type'] = $impressions_counter_type;

        return $this;
    }

    /**
     * Gets targeting_delivery_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getTargetingDeliveryTypes()
    {
        return $this->container['targeting_delivery_types'];
    }

    /**
     * Sets targeting_delivery_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $targeting_delivery_types targeting_delivery_types
     *
     * @return $this
     */
    public function setTargetingDeliveryTypes($targeting_delivery_types)
    {
        $this->container['targeting_delivery_types'] = $targeting_delivery_types;

        return $this;
    }

    /**
     * Gets rtb_integration_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getRtbIntegrationTypes()
    {
        return $this->container['rtb_integration_types'];
    }

    /**
     * Sets rtb_integration_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $rtb_integration_types rtb_integration_types
     *
     * @return $this
     */
    public function setRtbIntegrationTypes($rtb_integration_types)
    {
        $this->container['rtb_integration_types'] = $rtb_integration_types;

        return $this;
    }

    /**
     * Gets messenger_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getMessengerTypes()
    {
        return $this->container['messenger_types'];
    }

    /**
     * Sets messenger_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $messenger_types messenger_types
     *
     * @return $this
     */
    public function setMessengerTypes($messenger_types)
    {
        $this->container['messenger_types'] = $messenger_types;

        return $this;
    }

    /**
     * Gets platform_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPlatformTypes()
    {
        return $this->container['platform_types'];
    }

    /**
     * Sets platform_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $platform_types platform_types
     *
     * @return $this
     */
    public function setPlatformTypes($platform_types)
    {
        $this->container['platform_types'] = $platform_types;

        return $this;
    }

    /**
     * Gets signup_roles
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getSignupRoles()
    {
        return $this->container['signup_roles'];
    }

    /**
     * Sets signup_roles
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $signup_roles signup_roles
     *
     * @return $this
     */
    public function setSignupRoles($signup_roles)
    {
        $this->container['signup_roles'] = $signup_roles;

        return $this;
    }

    /**
     * Gets user_details_where_find
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getUserDetailsWhereFind()
    {
        return $this->container['user_details_where_find'];
    }

    /**
     * Sets user_details_where_find
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $user_details_where_find user_details_where_find
     *
     * @return $this
     */
    public function setUserDetailsWhereFind($user_details_where_find)
    {
        $this->container['user_details_where_find'] = $user_details_where_find;

        return $this;
    }

    /**
     * Gets media_buying_experience
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getMediaBuyingExperience()
    {
        return $this->container['media_buying_experience'];
    }

    /**
     * Sets media_buying_experience
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $media_buying_experience media_buying_experience
     *
     * @return $this
     */
    public function setMediaBuyingExperience($media_buying_experience)
    {
        $this->container['media_buying_experience'] = $media_buying_experience;

        return $this;
    }

    /**
     * Gets monthly_impressions_volume
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getMonthlyImpressionsVolume()
    {
        return $this->container['monthly_impressions_volume'];
    }

    /**
     * Sets monthly_impressions_volume
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $monthly_impressions_volume monthly_impressions_volume
     *
     * @return $this
     */
    public function setMonthlyImpressionsVolume($monthly_impressions_volume)
    {
        $this->container['monthly_impressions_volume'] = $monthly_impressions_volume;

        return $this;
    }

    /**
     * Gets creative_image_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getCreativeImageTypes()
    {
        return $this->container['creative_image_types'];
    }

    /**
     * Sets creative_image_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $creative_image_types creative_image_types
     *
     * @return $this
     */
    public function setCreativeImageTypes($creative_image_types)
    {
        $this->container['creative_image_types'] = $creative_image_types;

        return $this;
    }

    /**
     * Gets user_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getUserTypes()
    {
        return $this->container['user_types'];
    }

    /**
     * Sets user_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $user_types user_types
     *
     * @return $this
     */
    public function setUserTypes($user_types)
    {
        $this->container['user_types'] = $user_types;

        return $this;
    }

    /**
     * Gets publisher_payment_types
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getPublisherPaymentTypes()
    {
        return $this->container['publisher_payment_types'];
    }

    /**
     * Sets publisher_payment_types
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $publisher_payment_types publisher_payment_types
     *
     * @return $this
     */
    public function setPublisherPaymentTypes($publisher_payment_types)
    {
        $this->container['publisher_payment_types'] = $publisher_payment_types;

        return $this;
    }

    /**
     * Gets datacenters
     *
     * @return \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null
     */
    public function getDatacenters()
    {
        return $this->container['datacenters'];
    }

    /**
     * Sets datacenters
     *
     * @param \OpenAPI\Client\Model\InlineResponse20012Statuses[]|null $datacenters datacenters
     *
     * @return $this
     */
    public function setDatacenters($datacenters)
    {
        $this->container['datacenters'] = $datacenters;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


