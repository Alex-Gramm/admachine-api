<?php
/**
 * SubdomainInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PLATFORM.IO
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SubdomainInfo Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SubdomainInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SubdomainInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'logo' => 'string',
        'logo_header' => 'string',
        'subdomain' => 'string',
        'favicon' => 'string',
        'rules_text' => 'string',
        'privacy_text' => 'string',
        'owner_email' => 'string',
        'external_js' => 'string',
        'new_user_js' => 'string',
        'agreement_text' => 'string',
        'css' => 'string',
        'css_value' => 'string',
        'html_domain' => 'string',
        'terms_of_service_url' => 'string',
        'privacy_policy_url' => 'string',
        'privacy_policy_text' => 'string',
        'rules_of_service_text' => 'string',
        'terms_of_service_text' => 'string',
        'time' => 'string',
        'owner_id' => 'float',
        'signup_adv' => 'float',
        'signup_pub' => 'float',
        'subdomain_id' => 'float',
        'hide_terms' => 'float',
        'enable_id_verification' => 'float',
        'remove_powered_by' => 'bool',
        'remove_trial_text' => 'int',
        'channels' => '\OpenAPI\Client\Model\SettingsUserChannels',
        'platform' => 'float',
        'enable_advertiser_signup' => 'bool',
        'enable_publisher_signup' => 'bool',
        'ga_key' => 'string',
        'yandex_metrik_key' => 'string',
        'amplitude_key' => 'string',
        'hotjar_key' => 'string',
        'carrotqest_key' => 'string',
        'rtb_domain' => 'string',
        'strategies_min_budget' => 'int',
        'creative_max_video_size' => 'int',
        'creative_max_image_size' => 'int',
        'bonus_checklist_enabled' => 'bool',
        'first_deposit_bonus' => 'float',
        'is_fixed_deposit_bonus' => 'bool',
        'is_audience_channel_allowed' => 'bool',
        'adult_ads' => 'bool',
        'min_deposit' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'logo' => null,
        'logo_header' => null,
        'subdomain' => null,
        'favicon' => null,
        'rules_text' => null,
        'privacy_text' => null,
        'owner_email' => null,
        'external_js' => null,
        'new_user_js' => null,
        'agreement_text' => null,
        'css' => null,
        'css_value' => null,
        'html_domain' => null,
        'terms_of_service_url' => null,
        'privacy_policy_url' => null,
        'privacy_policy_text' => null,
        'rules_of_service_text' => null,
        'terms_of_service_text' => null,
        'time' => null,
        'owner_id' => null,
        'signup_adv' => null,
        'signup_pub' => null,
        'subdomain_id' => null,
        'hide_terms' => null,
        'enable_id_verification' => null,
        'remove_powered_by' => null,
        'remove_trial_text' => null,
        'channels' => null,
        'platform' => null,
        'enable_advertiser_signup' => null,
        'enable_publisher_signup' => null,
        'ga_key' => null,
        'yandex_metrik_key' => null,
        'amplitude_key' => null,
        'hotjar_key' => null,
        'carrotqest_key' => null,
        'rtb_domain' => null,
        'strategies_min_budget' => null,
        'creative_max_video_size' => null,
        'creative_max_image_size' => null,
        'bonus_checklist_enabled' => null,
        'first_deposit_bonus' => null,
        'is_fixed_deposit_bonus' => null,
        'is_audience_channel_allowed' => null,
        'adult_ads' => null,
        'min_deposit' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'logo' => 'logo',
        'logo_header' => 'logo_header',
        'subdomain' => 'subdomain',
        'favicon' => 'favicon',
        'rules_text' => 'rules_text',
        'privacy_text' => 'privacy_text',
        'owner_email' => 'owner_email',
        'external_js' => 'external_js',
        'new_user_js' => 'new_user_js',
        'agreement_text' => 'agreement_text',
        'css' => 'css',
        'css_value' => 'css_value',
        'html_domain' => 'html_domain',
        'terms_of_service_url' => 'terms_of_service_url',
        'privacy_policy_url' => 'privacy_policy_url',
        'privacy_policy_text' => 'privacy_policy_text',
        'rules_of_service_text' => 'rules_of_service_text',
        'terms_of_service_text' => 'terms_of_service_text',
        'time' => 'time',
        'owner_id' => 'owner_id',
        'signup_adv' => 'signup_adv',
        'signup_pub' => 'signup_pub',
        'subdomain_id' => 'subdomain_id',
        'hide_terms' => 'hide_terms',
        'enable_id_verification' => 'enable_id_verification',
        'remove_powered_by' => 'remove_powered_by',
        'remove_trial_text' => 'remove_trial_text',
        'channels' => 'channels',
        'platform' => 'platform',
        'enable_advertiser_signup' => 'enable_advertiser_signup',
        'enable_publisher_signup' => 'enable_publisher_signup',
        'ga_key' => 'ga_key',
        'yandex_metrik_key' => 'yandex_metrik_key',
        'amplitude_key' => 'amplitude_key',
        'hotjar_key' => 'hotjar_key',
        'carrotqest_key' => 'carrotqest_key',
        'rtb_domain' => 'rtb_domain',
        'strategies_min_budget' => 'strategies_min_budget',
        'creative_max_video_size' => 'creative_max_video_size',
        'creative_max_image_size' => 'creative_max_image_size',
        'bonus_checklist_enabled' => 'bonus_checklist_enabled',
        'first_deposit_bonus' => 'first_deposit_bonus',
        'is_fixed_deposit_bonus' => 'is_fixed_deposit_bonus',
        'is_audience_channel_allowed' => 'is_audience_channel_allowed',
        'adult_ads' => 'adult_ads',
        'min_deposit' => 'min_deposit'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'logo' => 'setLogo',
        'logo_header' => 'setLogoHeader',
        'subdomain' => 'setSubdomain',
        'favicon' => 'setFavicon',
        'rules_text' => 'setRulesText',
        'privacy_text' => 'setPrivacyText',
        'owner_email' => 'setOwnerEmail',
        'external_js' => 'setExternalJs',
        'new_user_js' => 'setNewUserJs',
        'agreement_text' => 'setAgreementText',
        'css' => 'setCss',
        'css_value' => 'setCssValue',
        'html_domain' => 'setHtmlDomain',
        'terms_of_service_url' => 'setTermsOfServiceUrl',
        'privacy_policy_url' => 'setPrivacyPolicyUrl',
        'privacy_policy_text' => 'setPrivacyPolicyText',
        'rules_of_service_text' => 'setRulesOfServiceText',
        'terms_of_service_text' => 'setTermsOfServiceText',
        'time' => 'setTime',
        'owner_id' => 'setOwnerId',
        'signup_adv' => 'setSignupAdv',
        'signup_pub' => 'setSignupPub',
        'subdomain_id' => 'setSubdomainId',
        'hide_terms' => 'setHideTerms',
        'enable_id_verification' => 'setEnableIdVerification',
        'remove_powered_by' => 'setRemovePoweredBy',
        'remove_trial_text' => 'setRemoveTrialText',
        'channels' => 'setChannels',
        'platform' => 'setPlatform',
        'enable_advertiser_signup' => 'setEnableAdvertiserSignup',
        'enable_publisher_signup' => 'setEnablePublisherSignup',
        'ga_key' => 'setGaKey',
        'yandex_metrik_key' => 'setYandexMetrikKey',
        'amplitude_key' => 'setAmplitudeKey',
        'hotjar_key' => 'setHotjarKey',
        'carrotqest_key' => 'setCarrotqestKey',
        'rtb_domain' => 'setRtbDomain',
        'strategies_min_budget' => 'setStrategiesMinBudget',
        'creative_max_video_size' => 'setCreativeMaxVideoSize',
        'creative_max_image_size' => 'setCreativeMaxImageSize',
        'bonus_checklist_enabled' => 'setBonusChecklistEnabled',
        'first_deposit_bonus' => 'setFirstDepositBonus',
        'is_fixed_deposit_bonus' => 'setIsFixedDepositBonus',
        'is_audience_channel_allowed' => 'setIsAudienceChannelAllowed',
        'adult_ads' => 'setAdultAds',
        'min_deposit' => 'setMinDeposit'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'logo' => 'getLogo',
        'logo_header' => 'getLogoHeader',
        'subdomain' => 'getSubdomain',
        'favicon' => 'getFavicon',
        'rules_text' => 'getRulesText',
        'privacy_text' => 'getPrivacyText',
        'owner_email' => 'getOwnerEmail',
        'external_js' => 'getExternalJs',
        'new_user_js' => 'getNewUserJs',
        'agreement_text' => 'getAgreementText',
        'css' => 'getCss',
        'css_value' => 'getCssValue',
        'html_domain' => 'getHtmlDomain',
        'terms_of_service_url' => 'getTermsOfServiceUrl',
        'privacy_policy_url' => 'getPrivacyPolicyUrl',
        'privacy_policy_text' => 'getPrivacyPolicyText',
        'rules_of_service_text' => 'getRulesOfServiceText',
        'terms_of_service_text' => 'getTermsOfServiceText',
        'time' => 'getTime',
        'owner_id' => 'getOwnerId',
        'signup_adv' => 'getSignupAdv',
        'signup_pub' => 'getSignupPub',
        'subdomain_id' => 'getSubdomainId',
        'hide_terms' => 'getHideTerms',
        'enable_id_verification' => 'getEnableIdVerification',
        'remove_powered_by' => 'getRemovePoweredBy',
        'remove_trial_text' => 'getRemoveTrialText',
        'channels' => 'getChannels',
        'platform' => 'getPlatform',
        'enable_advertiser_signup' => 'getEnableAdvertiserSignup',
        'enable_publisher_signup' => 'getEnablePublisherSignup',
        'ga_key' => 'getGaKey',
        'yandex_metrik_key' => 'getYandexMetrikKey',
        'amplitude_key' => 'getAmplitudeKey',
        'hotjar_key' => 'getHotjarKey',
        'carrotqest_key' => 'getCarrotqestKey',
        'rtb_domain' => 'getRtbDomain',
        'strategies_min_budget' => 'getStrategiesMinBudget',
        'creative_max_video_size' => 'getCreativeMaxVideoSize',
        'creative_max_image_size' => 'getCreativeMaxImageSize',
        'bonus_checklist_enabled' => 'getBonusChecklistEnabled',
        'first_deposit_bonus' => 'getFirstDepositBonus',
        'is_fixed_deposit_bonus' => 'getIsFixedDepositBonus',
        'is_audience_channel_allowed' => 'getIsAudienceChannelAllowed',
        'adult_ads' => 'getAdultAds',
        'min_deposit' => 'getMinDeposit'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['logo_header'] = isset($data['logo_header']) ? $data['logo_header'] : null;
        $this->container['subdomain'] = isset($data['subdomain']) ? $data['subdomain'] : null;
        $this->container['favicon'] = isset($data['favicon']) ? $data['favicon'] : null;
        $this->container['rules_text'] = isset($data['rules_text']) ? $data['rules_text'] : null;
        $this->container['privacy_text'] = isset($data['privacy_text']) ? $data['privacy_text'] : null;
        $this->container['owner_email'] = isset($data['owner_email']) ? $data['owner_email'] : null;
        $this->container['external_js'] = isset($data['external_js']) ? $data['external_js'] : null;
        $this->container['new_user_js'] = isset($data['new_user_js']) ? $data['new_user_js'] : null;
        $this->container['agreement_text'] = isset($data['agreement_text']) ? $data['agreement_text'] : null;
        $this->container['css'] = isset($data['css']) ? $data['css'] : null;
        $this->container['css_value'] = isset($data['css_value']) ? $data['css_value'] : null;
        $this->container['html_domain'] = isset($data['html_domain']) ? $data['html_domain'] : null;
        $this->container['terms_of_service_url'] = isset($data['terms_of_service_url']) ? $data['terms_of_service_url'] : null;
        $this->container['privacy_policy_url'] = isset($data['privacy_policy_url']) ? $data['privacy_policy_url'] : null;
        $this->container['privacy_policy_text'] = isset($data['privacy_policy_text']) ? $data['privacy_policy_text'] : null;
        $this->container['rules_of_service_text'] = isset($data['rules_of_service_text']) ? $data['rules_of_service_text'] : null;
        $this->container['terms_of_service_text'] = isset($data['terms_of_service_text']) ? $data['terms_of_service_text'] : null;
        $this->container['time'] = isset($data['time']) ? $data['time'] : null;
        $this->container['owner_id'] = isset($data['owner_id']) ? $data['owner_id'] : null;
        $this->container['signup_adv'] = isset($data['signup_adv']) ? $data['signup_adv'] : null;
        $this->container['signup_pub'] = isset($data['signup_pub']) ? $data['signup_pub'] : null;
        $this->container['subdomain_id'] = isset($data['subdomain_id']) ? $data['subdomain_id'] : null;
        $this->container['hide_terms'] = isset($data['hide_terms']) ? $data['hide_terms'] : null;
        $this->container['enable_id_verification'] = isset($data['enable_id_verification']) ? $data['enable_id_verification'] : null;
        $this->container['remove_powered_by'] = isset($data['remove_powered_by']) ? $data['remove_powered_by'] : null;
        $this->container['remove_trial_text'] = isset($data['remove_trial_text']) ? $data['remove_trial_text'] : null;
        $this->container['channels'] = isset($data['channels']) ? $data['channels'] : null;
        $this->container['platform'] = isset($data['platform']) ? $data['platform'] : null;
        $this->container['enable_advertiser_signup'] = isset($data['enable_advertiser_signup']) ? $data['enable_advertiser_signup'] : null;
        $this->container['enable_publisher_signup'] = isset($data['enable_publisher_signup']) ? $data['enable_publisher_signup'] : null;
        $this->container['ga_key'] = isset($data['ga_key']) ? $data['ga_key'] : null;
        $this->container['yandex_metrik_key'] = isset($data['yandex_metrik_key']) ? $data['yandex_metrik_key'] : null;
        $this->container['amplitude_key'] = isset($data['amplitude_key']) ? $data['amplitude_key'] : null;
        $this->container['hotjar_key'] = isset($data['hotjar_key']) ? $data['hotjar_key'] : null;
        $this->container['carrotqest_key'] = isset($data['carrotqest_key']) ? $data['carrotqest_key'] : null;
        $this->container['rtb_domain'] = isset($data['rtb_domain']) ? $data['rtb_domain'] : null;
        $this->container['strategies_min_budget'] = isset($data['strategies_min_budget']) ? $data['strategies_min_budget'] : null;
        $this->container['creative_max_video_size'] = isset($data['creative_max_video_size']) ? $data['creative_max_video_size'] : null;
        $this->container['creative_max_image_size'] = isset($data['creative_max_image_size']) ? $data['creative_max_image_size'] : null;
        $this->container['bonus_checklist_enabled'] = isset($data['bonus_checklist_enabled']) ? $data['bonus_checklist_enabled'] : null;
        $this->container['first_deposit_bonus'] = isset($data['first_deposit_bonus']) ? $data['first_deposit_bonus'] : null;
        $this->container['is_fixed_deposit_bonus'] = isset($data['is_fixed_deposit_bonus']) ? $data['is_fixed_deposit_bonus'] : null;
        $this->container['is_audience_channel_allowed'] = isset($data['is_audience_channel_allowed']) ? $data['is_audience_channel_allowed'] : null;
        $this->container['adult_ads'] = isset($data['adult_ads']) ? $data['adult_ads'] : null;
        $this->container['min_deposit'] = isset($data['min_deposit']) ? $data['min_deposit'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets logo
     *
     * @return string|null
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param string|null $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets logo_header
     *
     * @return string|null
     */
    public function getLogoHeader()
    {
        return $this->container['logo_header'];
    }

    /**
     * Sets logo_header
     *
     * @param string|null $logo_header logo_header
     *
     * @return $this
     */
    public function setLogoHeader($logo_header)
    {
        $this->container['logo_header'] = $logo_header;

        return $this;
    }

    /**
     * Gets subdomain
     *
     * @return string|null
     */
    public function getSubdomain()
    {
        return $this->container['subdomain'];
    }

    /**
     * Sets subdomain
     *
     * @param string|null $subdomain subdomain
     *
     * @return $this
     */
    public function setSubdomain($subdomain)
    {
        $this->container['subdomain'] = $subdomain;

        return $this;
    }

    /**
     * Gets favicon
     *
     * @return string|null
     */
    public function getFavicon()
    {
        return $this->container['favicon'];
    }

    /**
     * Sets favicon
     *
     * @param string|null $favicon favicon
     *
     * @return $this
     */
    public function setFavicon($favicon)
    {
        $this->container['favicon'] = $favicon;

        return $this;
    }

    /**
     * Gets rules_text
     *
     * @return string|null
     */
    public function getRulesText()
    {
        return $this->container['rules_text'];
    }

    /**
     * Sets rules_text
     *
     * @param string|null $rules_text rules_text
     *
     * @return $this
     */
    public function setRulesText($rules_text)
    {
        $this->container['rules_text'] = $rules_text;

        return $this;
    }

    /**
     * Gets privacy_text
     *
     * @return string|null
     */
    public function getPrivacyText()
    {
        return $this->container['privacy_text'];
    }

    /**
     * Sets privacy_text
     *
     * @param string|null $privacy_text privacy_text
     *
     * @return $this
     */
    public function setPrivacyText($privacy_text)
    {
        $this->container['privacy_text'] = $privacy_text;

        return $this;
    }

    /**
     * Gets owner_email
     *
     * @return string|null
     */
    public function getOwnerEmail()
    {
        return $this->container['owner_email'];
    }

    /**
     * Sets owner_email
     *
     * @param string|null $owner_email owner_email
     *
     * @return $this
     */
    public function setOwnerEmail($owner_email)
    {
        $this->container['owner_email'] = $owner_email;

        return $this;
    }

    /**
     * Gets external_js
     *
     * @return string|null
     */
    public function getExternalJs()
    {
        return $this->container['external_js'];
    }

    /**
     * Sets external_js
     *
     * @param string|null $external_js external_js
     *
     * @return $this
     */
    public function setExternalJs($external_js)
    {
        $this->container['external_js'] = $external_js;

        return $this;
    }

    /**
     * Gets new_user_js
     *
     * @return string|null
     */
    public function getNewUserJs()
    {
        return $this->container['new_user_js'];
    }

    /**
     * Sets new_user_js
     *
     * @param string|null $new_user_js new_user_js
     *
     * @return $this
     */
    public function setNewUserJs($new_user_js)
    {
        $this->container['new_user_js'] = $new_user_js;

        return $this;
    }

    /**
     * Gets agreement_text
     *
     * @return string|null
     */
    public function getAgreementText()
    {
        return $this->container['agreement_text'];
    }

    /**
     * Sets agreement_text
     *
     * @param string|null $agreement_text agreement_text
     *
     * @return $this
     */
    public function setAgreementText($agreement_text)
    {
        $this->container['agreement_text'] = $agreement_text;

        return $this;
    }

    /**
     * Gets css
     *
     * @return string|null
     */
    public function getCss()
    {
        return $this->container['css'];
    }

    /**
     * Sets css
     *
     * @param string|null $css css
     *
     * @return $this
     */
    public function setCss($css)
    {
        $this->container['css'] = $css;

        return $this;
    }

    /**
     * Gets css_value
     *
     * @return string|null
     */
    public function getCssValue()
    {
        return $this->container['css_value'];
    }

    /**
     * Sets css_value
     *
     * @param string|null $css_value css_value
     *
     * @return $this
     */
    public function setCssValue($css_value)
    {
        $this->container['css_value'] = $css_value;

        return $this;
    }

    /**
     * Gets html_domain
     *
     * @return string|null
     */
    public function getHtmlDomain()
    {
        return $this->container['html_domain'];
    }

    /**
     * Sets html_domain
     *
     * @param string|null $html_domain html_domain
     *
     * @return $this
     */
    public function setHtmlDomain($html_domain)
    {
        $this->container['html_domain'] = $html_domain;

        return $this;
    }

    /**
     * Gets terms_of_service_url
     *
     * @return string|null
     */
    public function getTermsOfServiceUrl()
    {
        return $this->container['terms_of_service_url'];
    }

    /**
     * Sets terms_of_service_url
     *
     * @param string|null $terms_of_service_url terms_of_service_url
     *
     * @return $this
     */
    public function setTermsOfServiceUrl($terms_of_service_url)
    {
        $this->container['terms_of_service_url'] = $terms_of_service_url;

        return $this;
    }

    /**
     * Gets privacy_policy_url
     *
     * @return string|null
     */
    public function getPrivacyPolicyUrl()
    {
        return $this->container['privacy_policy_url'];
    }

    /**
     * Sets privacy_policy_url
     *
     * @param string|null $privacy_policy_url privacy_policy_url
     *
     * @return $this
     */
    public function setPrivacyPolicyUrl($privacy_policy_url)
    {
        $this->container['privacy_policy_url'] = $privacy_policy_url;

        return $this;
    }

    /**
     * Gets privacy_policy_text
     *
     * @return string|null
     */
    public function getPrivacyPolicyText()
    {
        return $this->container['privacy_policy_text'];
    }

    /**
     * Sets privacy_policy_text
     *
     * @param string|null $privacy_policy_text Privacy policy text
     *
     * @return $this
     */
    public function setPrivacyPolicyText($privacy_policy_text)
    {
        $this->container['privacy_policy_text'] = $privacy_policy_text;

        return $this;
    }

    /**
     * Gets rules_of_service_text
     *
     * @return string|null
     */
    public function getRulesOfServiceText()
    {
        return $this->container['rules_of_service_text'];
    }

    /**
     * Sets rules_of_service_text
     *
     * @param string|null $rules_of_service_text Rules of service text
     *
     * @return $this
     */
    public function setRulesOfServiceText($rules_of_service_text)
    {
        $this->container['rules_of_service_text'] = $rules_of_service_text;

        return $this;
    }

    /**
     * Gets terms_of_service_text
     *
     * @return string|null
     */
    public function getTermsOfServiceText()
    {
        return $this->container['terms_of_service_text'];
    }

    /**
     * Sets terms_of_service_text
     *
     * @param string|null $terms_of_service_text Terms of service text
     *
     * @return $this
     */
    public function setTermsOfServiceText($terms_of_service_text)
    {
        $this->container['terms_of_service_text'] = $terms_of_service_text;

        return $this;
    }

    /**
     * Gets time
     *
     * @return string|null
     */
    public function getTime()
    {
        return $this->container['time'];
    }

    /**
     * Sets time
     *
     * @param string|null $time time
     *
     * @return $this
     */
    public function setTime($time)
    {
        $this->container['time'] = $time;

        return $this;
    }

    /**
     * Gets owner_id
     *
     * @return float|null
     */
    public function getOwnerId()
    {
        return $this->container['owner_id'];
    }

    /**
     * Sets owner_id
     *
     * @param float|null $owner_id owner_id
     *
     * @return $this
     */
    public function setOwnerId($owner_id)
    {
        $this->container['owner_id'] = $owner_id;

        return $this;
    }

    /**
     * Gets signup_adv
     *
     * @return float|null
     */
    public function getSignupAdv()
    {
        return $this->container['signup_adv'];
    }

    /**
     * Sets signup_adv
     *
     * @param float|null $signup_adv signup_adv
     *
     * @return $this
     */
    public function setSignupAdv($signup_adv)
    {
        $this->container['signup_adv'] = $signup_adv;

        return $this;
    }

    /**
     * Gets signup_pub
     *
     * @return float|null
     */
    public function getSignupPub()
    {
        return $this->container['signup_pub'];
    }

    /**
     * Sets signup_pub
     *
     * @param float|null $signup_pub signup_pub
     *
     * @return $this
     */
    public function setSignupPub($signup_pub)
    {
        $this->container['signup_pub'] = $signup_pub;

        return $this;
    }

    /**
     * Gets subdomain_id
     *
     * @return float|null
     */
    public function getSubdomainId()
    {
        return $this->container['subdomain_id'];
    }

    /**
     * Sets subdomain_id
     *
     * @param float|null $subdomain_id subdomain_id
     *
     * @return $this
     */
    public function setSubdomainId($subdomain_id)
    {
        $this->container['subdomain_id'] = $subdomain_id;

        return $this;
    }

    /**
     * Gets hide_terms
     *
     * @return float|null
     */
    public function getHideTerms()
    {
        return $this->container['hide_terms'];
    }

    /**
     * Sets hide_terms
     *
     * @param float|null $hide_terms hide_terms
     *
     * @return $this
     */
    public function setHideTerms($hide_terms)
    {
        $this->container['hide_terms'] = $hide_terms;

        return $this;
    }

    /**
     * Gets enable_id_verification
     *
     * @return float|null
     */
    public function getEnableIdVerification()
    {
        return $this->container['enable_id_verification'];
    }

    /**
     * Sets enable_id_verification
     *
     * @param float|null $enable_id_verification enable_id_verification
     *
     * @return $this
     */
    public function setEnableIdVerification($enable_id_verification)
    {
        $this->container['enable_id_verification'] = $enable_id_verification;

        return $this;
    }

    /**
     * Gets remove_powered_by
     *
     * @return bool|null
     */
    public function getRemovePoweredBy()
    {
        return $this->container['remove_powered_by'];
    }

    /**
     * Sets remove_powered_by
     *
     * @param bool|null $remove_powered_by remove_powered_by
     *
     * @return $this
     */
    public function setRemovePoweredBy($remove_powered_by)
    {
        $this->container['remove_powered_by'] = $remove_powered_by;

        return $this;
    }

    /**
     * Gets remove_trial_text
     *
     * @return int|null
     */
    public function getRemoveTrialText()
    {
        return $this->container['remove_trial_text'];
    }

    /**
     * Sets remove_trial_text
     *
     * @param int|null $remove_trial_text remove_trial_text
     *
     * @return $this
     */
    public function setRemoveTrialText($remove_trial_text)
    {
        $this->container['remove_trial_text'] = $remove_trial_text;

        return $this;
    }

    /**
     * Gets channels
     *
     * @return \OpenAPI\Client\Model\SettingsUserChannels|null
     */
    public function getChannels()
    {
        return $this->container['channels'];
    }

    /**
     * Sets channels
     *
     * @param \OpenAPI\Client\Model\SettingsUserChannels|null $channels channels
     *
     * @return $this
     */
    public function setChannels($channels)
    {
        $this->container['channels'] = $channels;

        return $this;
    }

    /**
     * Gets platform
     *
     * @return float|null
     */
    public function getPlatform()
    {
        return $this->container['platform'];
    }

    /**
     * Sets platform
     *
     * @param float|null $platform platform
     *
     * @return $this
     */
    public function setPlatform($platform)
    {
        $this->container['platform'] = $platform;

        return $this;
    }

    /**
     * Gets enable_advertiser_signup
     *
     * @return bool|null
     */
    public function getEnableAdvertiserSignup()
    {
        return $this->container['enable_advertiser_signup'];
    }

    /**
     * Sets enable_advertiser_signup
     *
     * @param bool|null $enable_advertiser_signup enable_advertiser_signup
     *
     * @return $this
     */
    public function setEnableAdvertiserSignup($enable_advertiser_signup)
    {
        $this->container['enable_advertiser_signup'] = $enable_advertiser_signup;

        return $this;
    }

    /**
     * Gets enable_publisher_signup
     *
     * @return bool|null
     */
    public function getEnablePublisherSignup()
    {
        return $this->container['enable_publisher_signup'];
    }

    /**
     * Sets enable_publisher_signup
     *
     * @param bool|null $enable_publisher_signup enable_publisher_signup
     *
     * @return $this
     */
    public function setEnablePublisherSignup($enable_publisher_signup)
    {
        $this->container['enable_publisher_signup'] = $enable_publisher_signup;

        return $this;
    }

    /**
     * Gets ga_key
     *
     * @return string|null
     */
    public function getGaKey()
    {
        return $this->container['ga_key'];
    }

    /**
     * Sets ga_key
     *
     * @param string|null $ga_key ga_key
     *
     * @return $this
     */
    public function setGaKey($ga_key)
    {
        $this->container['ga_key'] = $ga_key;

        return $this;
    }

    /**
     * Gets yandex_metrik_key
     *
     * @return string|null
     */
    public function getYandexMetrikKey()
    {
        return $this->container['yandex_metrik_key'];
    }

    /**
     * Sets yandex_metrik_key
     *
     * @param string|null $yandex_metrik_key yandex_metrik_key
     *
     * @return $this
     */
    public function setYandexMetrikKey($yandex_metrik_key)
    {
        $this->container['yandex_metrik_key'] = $yandex_metrik_key;

        return $this;
    }

    /**
     * Gets amplitude_key
     *
     * @return string|null
     */
    public function getAmplitudeKey()
    {
        return $this->container['amplitude_key'];
    }

    /**
     * Sets amplitude_key
     *
     * @param string|null $amplitude_key amplitude_key
     *
     * @return $this
     */
    public function setAmplitudeKey($amplitude_key)
    {
        $this->container['amplitude_key'] = $amplitude_key;

        return $this;
    }

    /**
     * Gets hotjar_key
     *
     * @return string|null
     */
    public function getHotjarKey()
    {
        return $this->container['hotjar_key'];
    }

    /**
     * Sets hotjar_key
     *
     * @param string|null $hotjar_key hotjar_key
     *
     * @return $this
     */
    public function setHotjarKey($hotjar_key)
    {
        $this->container['hotjar_key'] = $hotjar_key;

        return $this;
    }

    /**
     * Gets carrotqest_key
     *
     * @return string|null
     */
    public function getCarrotqestKey()
    {
        return $this->container['carrotqest_key'];
    }

    /**
     * Sets carrotqest_key
     *
     * @param string|null $carrotqest_key carrotqest_key
     *
     * @return $this
     */
    public function setCarrotqestKey($carrotqest_key)
    {
        $this->container['carrotqest_key'] = $carrotqest_key;

        return $this;
    }

    /**
     * Gets rtb_domain
     *
     * @return string|null
     */
    public function getRtbDomain()
    {
        return $this->container['rtb_domain'];
    }

    /**
     * Sets rtb_domain
     *
     * @param string|null $rtb_domain rtb_domain
     *
     * @return $this
     */
    public function setRtbDomain($rtb_domain)
    {
        $this->container['rtb_domain'] = $rtb_domain;

        return $this;
    }

    /**
     * Gets strategies_min_budget
     *
     * @return int|null
     */
    public function getStrategiesMinBudget()
    {
        return $this->container['strategies_min_budget'];
    }

    /**
     * Sets strategies_min_budget
     *
     * @param int|null $strategies_min_budget strategies_min_budget
     *
     * @return $this
     */
    public function setStrategiesMinBudget($strategies_min_budget)
    {
        $this->container['strategies_min_budget'] = $strategies_min_budget;

        return $this;
    }

    /**
     * Gets creative_max_video_size
     *
     * @return int|null
     */
    public function getCreativeMaxVideoSize()
    {
        return $this->container['creative_max_video_size'];
    }

    /**
     * Sets creative_max_video_size
     *
     * @param int|null $creative_max_video_size creative_max_video_size
     *
     * @return $this
     */
    public function setCreativeMaxVideoSize($creative_max_video_size)
    {
        $this->container['creative_max_video_size'] = $creative_max_video_size;

        return $this;
    }

    /**
     * Gets creative_max_image_size
     *
     * @return int|null
     */
    public function getCreativeMaxImageSize()
    {
        return $this->container['creative_max_image_size'];
    }

    /**
     * Sets creative_max_image_size
     *
     * @param int|null $creative_max_image_size creative_max_image_size
     *
     * @return $this
     */
    public function setCreativeMaxImageSize($creative_max_image_size)
    {
        $this->container['creative_max_image_size'] = $creative_max_image_size;

        return $this;
    }

    /**
     * Gets bonus_checklist_enabled
     *
     * @return bool|null
     */
    public function getBonusChecklistEnabled()
    {
        return $this->container['bonus_checklist_enabled'];
    }

    /**
     * Sets bonus_checklist_enabled
     *
     * @param bool|null $bonus_checklist_enabled bonus_checklist_enabled
     *
     * @return $this
     */
    public function setBonusChecklistEnabled($bonus_checklist_enabled)
    {
        $this->container['bonus_checklist_enabled'] = $bonus_checklist_enabled;

        return $this;
    }

    /**
     * Gets first_deposit_bonus
     *
     * @return float|null
     */
    public function getFirstDepositBonus()
    {
        return $this->container['first_deposit_bonus'];
    }

    /**
     * Sets first_deposit_bonus
     *
     * @param float|null $first_deposit_bonus first_deposit_bonus
     *
     * @return $this
     */
    public function setFirstDepositBonus($first_deposit_bonus)
    {
        $this->container['first_deposit_bonus'] = $first_deposit_bonus;

        return $this;
    }

    /**
     * Gets is_fixed_deposit_bonus
     *
     * @return bool|null
     */
    public function getIsFixedDepositBonus()
    {
        return $this->container['is_fixed_deposit_bonus'];
    }

    /**
     * Sets is_fixed_deposit_bonus
     *
     * @param bool|null $is_fixed_deposit_bonus is_fixed_deposit_bonus
     *
     * @return $this
     */
    public function setIsFixedDepositBonus($is_fixed_deposit_bonus)
    {
        $this->container['is_fixed_deposit_bonus'] = $is_fixed_deposit_bonus;

        return $this;
    }

    /**
     * Gets is_audience_channel_allowed
     *
     * @return bool|null
     */
    public function getIsAudienceChannelAllowed()
    {
        return $this->container['is_audience_channel_allowed'];
    }

    /**
     * Sets is_audience_channel_allowed
     *
     * @param bool|null $is_audience_channel_allowed is_audience_channel_allowed
     *
     * @return $this
     */
    public function setIsAudienceChannelAllowed($is_audience_channel_allowed)
    {
        $this->container['is_audience_channel_allowed'] = $is_audience_channel_allowed;

        return $this;
    }

    /**
     * Gets adult_ads
     *
     * @return bool|null
     */
    public function getAdultAds()
    {
        return $this->container['adult_ads'];
    }

    /**
     * Sets adult_ads
     *
     * @param bool|null $adult_ads adult_ads
     *
     * @return $this
     */
    public function setAdultAds($adult_ads)
    {
        $this->container['adult_ads'] = $adult_ads;

        return $this;
    }

    /**
     * Gets min_deposit
     *
     * @return float|null
     */
    public function getMinDeposit()
    {
        return $this->container['min_deposit'];
    }

    /**
     * Sets min_deposit
     *
     * @param float|null $min_deposit min_deposit
     *
     * @return $this
     */
    public function setMinDeposit($min_deposit)
    {
        $this->container['min_deposit'] = $min_deposit;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


